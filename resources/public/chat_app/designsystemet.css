@charset "UTF-8";

@layer ds.reset, ds.theme, base, ds.utilities, ds.components;

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color-scheme.light {
  :root,
  [data-color-scheme='light'] {
    --ds-color-accent-background-default: #ffffff;
    --ds-color-accent-background-tinted: #eef4fa;
    --ds-color-accent-surface-default: #ffffff;
    --ds-color-accent-surface-tinted: #ddeaf6;
    --ds-color-accent-surface-hover: #c7ddf0;
    --ds-color-accent-surface-active: #b1cfea;
    --ds-color-accent-border-subtle: #99c0e3;
    --ds-color-accent-border-default: #3582c8;
    --ds-color-accent-border-strong: #0061b8;
    --ds-color-accent-text-subtle: #0061b8;
    --ds-color-accent-text-default: #002c54;
    --ds-color-accent-base-default: #0062ba;
    --ds-color-accent-base-hover: #004f96;
    --ds-color-accent-base-active: #003d75;
    --ds-color-accent-base-contrast-subtle: #dbe9f5;
    --ds-color-accent-base-contrast-default: #ffffff;
    --ds-color-neutral-background-default: #ffffff;
    --ds-color-neutral-background-tinted: #f3f4f4;
    --ds-color-neutral-surface-default: #ffffff;
    --ds-color-neutral-surface-tinted: #e7e9ea;
    --ds-color-neutral-surface-hover: #d8dadd;
    --ds-color-neutral-surface-active: #c9ccd0;
    --ds-color-neutral-border-subtle: #b8bcc1;
    --ds-color-neutral-border-default: #777f89;
    --ds-color-neutral-border-strong: #59626f;
    --ds-color-neutral-text-subtle: #59626f;
    --ds-color-neutral-text-default: #1f2c3d;
    --ds-color-neutral-base-default: #1e2b3c;
    --ds-color-neutral-base-hover: #313d4d;
    --ds-color-neutral-base-active: #444f5d;
    --ds-color-neutral-base-contrast-subtle: #babec4;
    --ds-color-neutral-base-contrast-default: #ffffff;
    --ds-color-brand1-background-default: #ffffff;
    --ds-color-brand1-background-tinted: #fef0f1;
    --ds-color-brand1-surface-default: #ffffff;
    --ds-color-brand1-surface-tinted: #fde2e3;
    --ds-color-brand1-surface-hover: #fccfd1;
    --ds-color-brand1-surface-active: #fabcbe;
    --ds-color-brand1-border-subtle: #f9a5a8;
    --ds-color-brand1-border-default: #d55356;
    --ds-color-brand1-border-strong: #a44043;
    --ds-color-brand1-text-subtle: #a44043;
    --ds-color-brand1-text-default: #4b1d1e;
    --ds-color-brand1-base-default: #f45f63;
    --ds-color-brand1-base-hover: #f78588;
    --ds-color-brand1-base-active: #f9a6a8;
    --ds-color-brand1-base-contrast-subtle: #020101;
    --ds-color-brand1-base-contrast-default: #000000;
    --ds-color-brand2-background-default: #ffffff;
    --ds-color-brand2-background-tinted: #fbf3df;
    --ds-color-brand2-surface-default: #ffffff;
    --ds-color-brand2-surface-tinted: #f8e7c1;
    --ds-color-brand2-surface-hover: #f3d797;
    --ds-color-brand2-surface-active: #eec76c;
    --ds-color-brand2-border-subtle: #e8b43a;
    --ds-color-brand2-border-default: #a17817;
    --ds-color-brand2-border-strong: #7c5c11;
    --ds-color-brand2-text-subtle: #7c5c11;
    --ds-color-brand2-text-default: #382908;
    --ds-color-brand2-base-default: #e5aa20;
    --ds-color-brand2-base-hover: #c9951c;
    --ds-color-brand2-base-active: #af8218;
    --ds-color-brand2-base-contrast-subtle: #2c2006;
    --ds-color-brand2-base-contrast-default: #000000;
    --ds-color-brand3-background-default: #ffffff;
    --ds-color-brand3-background-tinted: #eaf5fe;
    --ds-color-brand3-surface-default: #ffffff;
    --ds-color-brand3-surface-tinted: #d5ecfd;
    --ds-color-brand3-surface-hover: #b9dffc;
    --ds-color-brand3-surface-active: #9cd2fb;
    --ds-color-brand3-border-subtle: #7bc3f9;
    --ds-color-brand3-border-default: #1a83d2;
    --ds-color-brand3-border-strong: #1465a2;
    --ds-color-brand3-text-subtle: #1465a2;
    --ds-color-brand3-text-default: #092d49;
    --ds-color-brand3-base-default: #1e98f5;
    --ds-color-brand3-base-hover: #53b0f7;
    --ds-color-brand3-base-active: #81c5f9;
    --ds-color-brand3-base-contrast-subtle: #010507;
    --ds-color-brand3-base-contrast-default: #000000;
    --ds-color-success-background-default: #ffffff;
    --ds-color-success-background-tinted: #ecf6ee;
    --ds-color-success-surface-default: #ffffff;
    --ds-color-success-surface-tinted: #daeddd;
    --ds-color-success-surface-hover: #c3e2c7;
    --ds-color-success-surface-active: #abd6b1;
    --ds-color-success-border-subtle: #8fc997;
    --ds-color-success-border-default: #1d922d;
    --ds-color-success-border-strong: #057114;
    --ds-color-success-text-subtle: #057114;
    --ds-color-success-text-default: #023409;
    --ds-color-success-base-default: #068718;
    --ds-color-success-base-hover: #057014;
    --ds-color-success-base-active: #045a10;
    --ds-color-success-base-contrast-subtle: #fafdfb;
    --ds-color-success-base-contrast-default: #ffffff;
    --ds-color-danger-background-default: #ffffff;
    --ds-color-danger-background-tinted: #fbf1f1;
    --ds-color-danger-surface-default: #ffffff;
    --ds-color-danger-surface-tinted: #f8e4e4;
    --ds-color-danger-surface-hover: #f3d2d2;
    --ds-color-danger-surface-active: #eec1c1;
    --ds-color-danger-border-subtle: #e8adad;
    --ds-color-danger-border-default: #d15757;
    --ds-color-danger-border-strong: #bf1b1b;
    --ds-color-danger-text-subtle: #bf1b1b;
    --ds-color-danger-text-default: #590d0d;
    --ds-color-danger-base-default: #c01b1b;
    --ds-color-danger-base-hover: #9b1616;
    --ds-color-danger-base-active: #791111;
    --ds-color-danger-base-contrast-subtle: #f7e1e1;
    --ds-color-danger-base-contrast-default: #ffffff;
    --ds-color-info-background-default: #ffffff;
    --ds-color-info-background-tinted: #edf5fa;
    --ds-color-info-surface-default: #ffffff;
    --ds-color-info-surface-tinted: #dcebf6;
    --ds-color-info-surface-hover: #c5ddf0;
    --ds-color-info-surface-active: #aed0ea;
    --ds-color-info-border-subtle: #94c1e3;
    --ds-color-info-border-default: #2a83c8;
    --ds-color-info-border-strong: #0964a9;
    --ds-color-info-text-subtle: #0964a9;
    --ds-color-info-text-default: #042d4d;
    --ds-color-info-base-default: #0a71c0;
    --ds-color-info-base-hover: #085d9f;
    --ds-color-info-base-active: #074a7e;
    --ds-color-info-base-contrast-subtle: #eff6fb;
    --ds-color-info-base-contrast-default: #ffffff;
    --ds-color-warning-background-default: #ffffff;
    --ds-color-warning-background-tinted: #fcf2e2;
    --ds-color-warning-surface-default: #ffffff;
    --ds-color-warning-surface-tinted: #fae6c6;
    --ds-color-warning-surface-hover: #f6d5a0;
    --ds-color-warning-surface-active: #f3c479;
    --ds-color-warning-border-subtle: #eeb04c;
    --ds-color-warning-border-default: #ad7214;
    --ds-color-warning-border-strong: #85580f;
    --ds-color-warning-text-subtle: #85580f;
    --ds-color-warning-text-default: #3c2807;
    --ds-color-warning-base-default: #ea9b1b;
    --ds-color-warning-base-hover: #cd8818;
    --ds-color-warning-base-active: #b27614;
    --ds-color-warning-base-contrast-subtle: #271a04;
    --ds-color-warning-base-contrast-default: #000000;
    --ds-color-focus-inner: #ffffff;
    --ds-color-focus-outer: #1f2c3d;
    --ds-link-color-visited: #663299;

    color-scheme: light;
  }

  @media (prefers-color-scheme: light) {
    [data-color-scheme='auto'] {
      --ds-color-accent-background-default: #ffffff;
      --ds-color-accent-background-tinted: #eef4fa;
      --ds-color-accent-surface-default: #ffffff;
      --ds-color-accent-surface-tinted: #ddeaf6;
      --ds-color-accent-surface-hover: #c7ddf0;
      --ds-color-accent-surface-active: #b1cfea;
      --ds-color-accent-border-subtle: #99c0e3;
      --ds-color-accent-border-default: #3582c8;
      --ds-color-accent-border-strong: #0061b8;
      --ds-color-accent-text-subtle: #0061b8;
      --ds-color-accent-text-default: #002c54;
      --ds-color-accent-base-default: #0062ba;
      --ds-color-accent-base-hover: #004f96;
      --ds-color-accent-base-active: #003d75;
      --ds-color-accent-base-contrast-subtle: #dbe9f5;
      --ds-color-accent-base-contrast-default: #ffffff;
      --ds-color-neutral-background-default: #ffffff;
      --ds-color-neutral-background-tinted: #f3f4f4;
      --ds-color-neutral-surface-default: #ffffff;
      --ds-color-neutral-surface-tinted: #e7e9ea;
      --ds-color-neutral-surface-hover: #d8dadd;
      --ds-color-neutral-surface-active: #c9ccd0;
      --ds-color-neutral-border-subtle: #b8bcc1;
      --ds-color-neutral-border-default: #777f89;
      --ds-color-neutral-border-strong: #59626f;
      --ds-color-neutral-text-subtle: #59626f;
      --ds-color-neutral-text-default: #1f2c3d;
      --ds-color-neutral-base-default: #1e2b3c;
      --ds-color-neutral-base-hover: #313d4d;
      --ds-color-neutral-base-active: #444f5d;
      --ds-color-neutral-base-contrast-subtle: #babec4;
      --ds-color-neutral-base-contrast-default: #ffffff;
      --ds-color-brand1-background-default: #ffffff;
      --ds-color-brand1-background-tinted: #fef0f1;
      --ds-color-brand1-surface-default: #ffffff;
      --ds-color-brand1-surface-tinted: #fde2e3;
      --ds-color-brand1-surface-hover: #fccfd1;
      --ds-color-brand1-surface-active: #fabcbe;
      --ds-color-brand1-border-subtle: #f9a5a8;
      --ds-color-brand1-border-default: #d55356;
      --ds-color-brand1-border-strong: #a44043;
      --ds-color-brand1-text-subtle: #a44043;
      --ds-color-brand1-text-default: #4b1d1e;
      --ds-color-brand1-base-default: #f45f63;
      --ds-color-brand1-base-hover: #f78588;
      --ds-color-brand1-base-active: #f9a6a8;
      --ds-color-brand1-base-contrast-subtle: #020101;
      --ds-color-brand1-base-contrast-default: #000000;
      --ds-color-brand2-background-default: #ffffff;
      --ds-color-brand2-background-tinted: #fbf3df;
      --ds-color-brand2-surface-default: #ffffff;
      --ds-color-brand2-surface-tinted: #f8e7c1;
      --ds-color-brand2-surface-hover: #f3d797;
      --ds-color-brand2-surface-active: #eec76c;
      --ds-color-brand2-border-subtle: #e8b43a;
      --ds-color-brand2-border-default: #a17817;
      --ds-color-brand2-border-strong: #7c5c11;
      --ds-color-brand2-text-subtle: #7c5c11;
      --ds-color-brand2-text-default: #382908;
      --ds-color-brand2-base-default: #e5aa20;
      --ds-color-brand2-base-hover: #c9951c;
      --ds-color-brand2-base-active: #af8218;
      --ds-color-brand2-base-contrast-subtle: #2c2006;
      --ds-color-brand2-base-contrast-default: #000000;
      --ds-color-brand3-background-default: #ffffff;
      --ds-color-brand3-background-tinted: #eaf5fe;
      --ds-color-brand3-surface-default: #ffffff;
      --ds-color-brand3-surface-tinted: #d5ecfd;
      --ds-color-brand3-surface-hover: #b9dffc;
      --ds-color-brand3-surface-active: #9cd2fb;
      --ds-color-brand3-border-subtle: #7bc3f9;
      --ds-color-brand3-border-default: #1a83d2;
      --ds-color-brand3-border-strong: #1465a2;
      --ds-color-brand3-text-subtle: #1465a2;
      --ds-color-brand3-text-default: #092d49;
      --ds-color-brand3-base-default: #1e98f5;
      --ds-color-brand3-base-hover: #53b0f7;
      --ds-color-brand3-base-active: #81c5f9;
      --ds-color-brand3-base-contrast-subtle: #010507;
      --ds-color-brand3-base-contrast-default: #000000;
      --ds-color-success-background-default: #ffffff;
      --ds-color-success-background-tinted: #ecf6ee;
      --ds-color-success-surface-default: #ffffff;
      --ds-color-success-surface-tinted: #daeddd;
      --ds-color-success-surface-hover: #c3e2c7;
      --ds-color-success-surface-active: #abd6b1;
      --ds-color-success-border-subtle: #8fc997;
      --ds-color-success-border-default: #1d922d;
      --ds-color-success-border-strong: #057114;
      --ds-color-success-text-subtle: #057114;
      --ds-color-success-text-default: #023409;
      --ds-color-success-base-default: #068718;
      --ds-color-success-base-hover: #057014;
      --ds-color-success-base-active: #045a10;
      --ds-color-success-base-contrast-subtle: #fafdfb;
      --ds-color-success-base-contrast-default: #ffffff;
      --ds-color-danger-background-default: #ffffff;
      --ds-color-danger-background-tinted: #fbf1f1;
      --ds-color-danger-surface-default: #ffffff;
      --ds-color-danger-surface-tinted: #f8e4e4;
      --ds-color-danger-surface-hover: #f3d2d2;
      --ds-color-danger-surface-active: #eec1c1;
      --ds-color-danger-border-subtle: #e8adad;
      --ds-color-danger-border-default: #d15757;
      --ds-color-danger-border-strong: #bf1b1b;
      --ds-color-danger-text-subtle: #bf1b1b;
      --ds-color-danger-text-default: #590d0d;
      --ds-color-danger-base-default: #c01b1b;
      --ds-color-danger-base-hover: #9b1616;
      --ds-color-danger-base-active: #791111;
      --ds-color-danger-base-contrast-subtle: #f7e1e1;
      --ds-color-danger-base-contrast-default: #ffffff;
      --ds-color-info-background-default: #ffffff;
      --ds-color-info-background-tinted: #edf5fa;
      --ds-color-info-surface-default: #ffffff;
      --ds-color-info-surface-tinted: #dcebf6;
      --ds-color-info-surface-hover: #c5ddf0;
      --ds-color-info-surface-active: #aed0ea;
      --ds-color-info-border-subtle: #94c1e3;
      --ds-color-info-border-default: #2a83c8;
      --ds-color-info-border-strong: #0964a9;
      --ds-color-info-text-subtle: #0964a9;
      --ds-color-info-text-default: #042d4d;
      --ds-color-info-base-default: #0a71c0;
      --ds-color-info-base-hover: #085d9f;
      --ds-color-info-base-active: #074a7e;
      --ds-color-info-base-contrast-subtle: #eff6fb;
      --ds-color-info-base-contrast-default: #ffffff;
      --ds-color-warning-background-default: #ffffff;
      --ds-color-warning-background-tinted: #fcf2e2;
      --ds-color-warning-surface-default: #ffffff;
      --ds-color-warning-surface-tinted: #fae6c6;
      --ds-color-warning-surface-hover: #f6d5a0;
      --ds-color-warning-surface-active: #f3c479;
      --ds-color-warning-border-subtle: #eeb04c;
      --ds-color-warning-border-default: #ad7214;
      --ds-color-warning-border-strong: #85580f;
      --ds-color-warning-text-subtle: #85580f;
      --ds-color-warning-text-default: #3c2807;
      --ds-color-warning-base-default: #ea9b1b;
      --ds-color-warning-base-hover: #cd8818;
      --ds-color-warning-base-active: #b27614;
      --ds-color-warning-base-contrast-subtle: #271a04;
      --ds-color-warning-base-contrast-default: #000000;
      --ds-color-focus-inner: #ffffff;
      --ds-color-focus-outer: #1f2c3d;
      --ds-link-color-visited: #663299;

      color-scheme: light;
    }
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.typography.secondary {
  [data-typography='secondary'] {
    --ds-font-family: IBM Plex Mono;
    --ds-font-weight-medium: 500;
    --ds-font-weight-semibold: 600;
    --ds-font-weight-regular: 400;
    --ds-heading-2xl-font-weight: 500;
    --ds-heading-2xl-line-height: 1.3;
    --ds-heading-2xl-font-size: 3.75rem;
    --ds-heading-2xl-letter-spacing: -1%;
    --ds-heading-xl-font-weight: 500;
    --ds-heading-xl-line-height: 1.3;
    --ds-heading-xl-font-size: 3rem;
    --ds-heading-xl-letter-spacing: -1%;
    --ds-heading-lg-font-weight: 500;
    --ds-heading-lg-line-height: 1.3;
    --ds-heading-lg-font-size: 2.25rem;
    --ds-heading-lg-letter-spacing: -0.5%;
    --ds-heading-md-font-weight: 500;
    --ds-heading-md-line-height: 1.3;
    --ds-heading-md-font-size: 1.875rem;
    --ds-heading-md-letter-spacing: -0.25%;
    --ds-heading-sm-font-weight: 500;
    --ds-heading-sm-line-height: 1.3;
    --ds-heading-sm-font-size: 1.5rem;
    --ds-heading-sm-letter-spacing: 0%;
    --ds-heading-xs-font-weight: 500;
    --ds-heading-xs-line-height: 1.3;
    --ds-heading-xs-font-size: 1.3125rem;
    --ds-heading-xs-letter-spacing: 0.15%;
    --ds-heading-2xs-font-weight: 500;
    --ds-heading-2xs-line-height: 1.3;
    --ds-heading-2xs-font-size: 1.125rem;
    --ds-heading-2xs-letter-spacing: 0.15%;
    --ds-body-xl-font-weight: 400;
    --ds-body-xl-line-height: 1.5;
    --ds-body-xl-font-size: 1.5rem;
    --ds-body-xl-letter-spacing: 0.5%;
    --ds-body-lg-font-weight: 400;
    --ds-body-lg-line-height: 1.5;
    --ds-body-lg-font-size: 1.3125rem;
    --ds-body-lg-letter-spacing: 0.5%;
    --ds-body-md-font-weight: 400;
    --ds-body-md-line-height: 1.5;
    --ds-body-md-font-size: 1.125rem;
    --ds-body-md-letter-spacing: 0.5%;
    --ds-body-sm-font-weight: 400;
    --ds-body-sm-line-height: 1.5;
    --ds-body-sm-font-size: 1rem;
    --ds-body-sm-letter-spacing: 0.25%;
    --ds-body-xs-font-weight: 400;
    --ds-body-xs-line-height: 1.5;
    --ds-body-xs-font-size: 0.875rem;
    --ds-body-xs-letter-spacing: 0.15%;
    --ds-body-short-xl-font-weight: 400;
    --ds-body-short-xl-line-height: 1.3;
    --ds-body-short-xl-font-size: 1.5rem;
    --ds-body-short-xl-letter-spacing: 0.5%;
    --ds-body-short-lg-font-weight: 400;
    --ds-body-short-lg-line-height: 1.3;
    --ds-body-short-lg-font-size: 1.3125rem;
    --ds-body-short-lg-letter-spacing: 0.5%;
    --ds-body-short-md-font-weight: 400;
    --ds-body-short-md-line-height: 1.3;
    --ds-body-short-md-font-size: 1.125rem;
    --ds-body-short-md-letter-spacing: 0.5%;
    --ds-body-short-sm-font-weight: 400;
    --ds-body-short-sm-line-height: 1.3;
    --ds-body-short-sm-font-size: 1rem;
    --ds-body-short-sm-letter-spacing: 0.25%;
    --ds-body-short-xs-font-weight: 400;
    --ds-body-short-xs-line-height: 1.3;
    --ds-body-short-xs-font-size: 0.875rem;
    --ds-body-short-xs-letter-spacing: 0.15%;
    --ds-body-long-xl-font-weight: 400;
    --ds-body-long-xl-line-height: 1.7;
    --ds-body-long-xl-font-size: 1.5rem;
    --ds-body-long-xl-letter-spacing: 0.5%;
    --ds-body-long-lg-font-weight: 400;
    --ds-body-long-lg-line-height: 1.7;
    --ds-body-long-lg-font-size: 1.3125rem;
    --ds-body-long-lg-letter-spacing: 0.5%;
    --ds-body-long-md-font-weight: 400;
    --ds-body-long-md-line-height: 1.7;
    --ds-body-long-md-font-size: 1.125rem;
    --ds-body-long-md-letter-spacing: 0.5%;
    --ds-body-long-sm-font-weight: 400;
    --ds-body-long-sm-line-height: 1.7;
    --ds-body-long-sm-font-size: 1rem;
    --ds-body-long-sm-letter-spacing: 0.25%;
    --ds-body-long-xs-font-weight: 400;
    --ds-body-long-xs-line-height: 1.7;
    --ds-body-long-xs-font-size: 0.875rem;
    --ds-body-long-xs-letter-spacing: 0.15%;
    --ds-line-height-sm: 1.3;
    --ds-line-height-md: 1.5;
    --ds-line-height-lg: 1.7;
    --ds-font-size-1: 0.75rem;
    --ds-font-size-2: 0.875rem;
    --ds-font-size-3: 1rem;
    --ds-font-size-4: 1.125rem;
    --ds-font-size-5: 1.3125rem;
    --ds-font-size-6: 1.5rem;
    --ds-font-size-7: 1.875rem;
    --ds-font-size-8: 2.25rem;
    --ds-font-size-9: 3rem;
    --ds-font-size-10: 3.75rem;
    --ds-letter-spacing-1: -1%;
    --ds-letter-spacing-2: -0.5%;
    --ds-letter-spacing-3: -0.25%;
    --ds-letter-spacing-4: -0.15%;
    --ds-letter-spacing-5: 0%;
    --ds-letter-spacing-6: 0.15%;
    --ds-letter-spacing-7: 0.25%;
    --ds-letter-spacing-8: 0.5%;
    --ds-letter-spacing-9: 1.5%;
  }
}
/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.semantic {
  :root {
    --ds-size-base: 18;
    --ds-size-step: 4;
    --ds-border-radius-base: 0.25rem;
    --ds-border-radius-scale: 0.25rem;
    --ds-border-radius-sm: min(var(--ds-border-radius-base) * 0.5, var(--ds-border-radius-scale));
    --ds-border-radius-md: min(var(--ds-border-radius-base), var(--ds-border-radius-scale) * 2);
    --ds-border-radius-lg: min(var(--ds-border-radius-base) * 2, var(--ds-border-radius-scale) * 5);
    --ds-border-radius-xl: min(var(--ds-border-radius-base) * 3, var(--ds-border-radius-scale) * 7);
    --ds-border-radius-default: var(--ds-border-radius-base);
    --ds-border-radius-full: 624.9375rem;
    --ds-opacity-disabled: 30%;
    --ds-border-width-default: 1px;
    --ds-border-width-focus: 3px;
    --ds-shadow-xs: 0 0 1px 0 rgba(0, 0, 0, 0.16), 0 1px 2px 0 rgba(0, 0, 0, 0.12);
    --ds-shadow-sm: 0 0 1px 0 rgba(0, 0, 0, 0.15), 0 1px 2px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.1);
    --ds-shadow-md: 0 0 1px 0 rgba(0, 0, 0, 0.14), 0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 4px 8px 0 rgba(0, 0, 0, 0.12);
    --ds-shadow-lg: 0 0 1px 0 rgba(0, 0, 0, 0.13), 0 3px 5px 0 rgba(0, 0, 0, 0.13), 0 6px 12px 0 rgba(0, 0, 0, 0.14);
    --ds-shadow-xl: 0 0 1px 0 rgba(0, 0, 0, 0.12), 0 4px 8px 0 rgba(0, 0, 0, 0.16), 0 12px 24px 0 rgba(0, 0, 0, 0.16);

    --ds-size-0: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 0);
    --ds-size-1: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 1);
    --ds-size-2: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 2);
    --ds-size-3: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 3);
    --ds-size-4: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 4);
    --ds-size-5: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 5);
    --ds-size-6: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 6);
    --ds-size-7: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 7);
    --ds-size-8: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 8);
    --ds-size-9: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 9);
    --ds-size-10: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 10);
    --ds-size-11: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 11);
    --ds-size-12: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 12);
    --ds-size-13: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 13);
    --ds-size-14: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 14);
    --ds-size-15: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 15);
    --ds-size-18: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 18);
    --ds-size-22: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 22);
    --ds-size-26: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 26);
    --ds-size-30: calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 30);

    @supports (width: round(down, 0.1em, 1px)) {
      --ds-size-0: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 0), 0.0625rem);
      --ds-size-1: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 1), 0.0625rem);
      --ds-size-2: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 2), 0.0625rem);
      --ds-size-3: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 3), 0.0625rem);
      --ds-size-4: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 4), 0.0625rem);
      --ds-size-5: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 5), 0.0625rem);
      --ds-size-6: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 6), 0.0625rem);
      --ds-size-7: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 7), 0.0625rem);
      --ds-size-8: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 8), 0.0625rem);
      --ds-size-9: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 9), 0.0625rem);
      --ds-size-10: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 10), 0.0625rem);
      --ds-size-11: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 11), 0.0625rem);
      --ds-size-12: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 12), 0.0625rem);
      --ds-size-13: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 13), 0.0625rem);
      --ds-size-14: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 14), 0.0625rem);
      --ds-size-15: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 15), 0.0625rem);
      --ds-size-18: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 18), 0.0625rem);
      --ds-size-22: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 22), 0.0625rem);
      --ds-size-26: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 26), 0.0625rem);
      --ds-size-30: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 30), 0.0625rem);
    }
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color-scheme.dark {
  [data-color-scheme='dark'] {
    --ds-color-accent-background-default: #001c35;
    --ds-color-accent-background-tinted: #002445;
    --ds-color-accent-surface-default: #002d55;
    --ds-color-accent-surface-tinted: #003565;
    --ds-color-accent-surface-hover: #003c71;
    --ds-color-accent-surface-active: #004481;
    --ds-color-accent-border-subtle: #00519a;
    --ds-color-accent-border-default: #307fc7;
    --ds-color-accent-border-strong: #70a7d8;
    --ds-color-accent-text-subtle: #70a7d8;
    --ds-color-accent-text-default: #d7e7f4;
    --ds-color-accent-base-default: #4c91cf;
    --ds-color-accent-base-hover: #6fa6d8;
    --ds-color-accent-base-active: #92bce1;
    --ds-color-accent-base-contrast-subtle: #0d1924;
    --ds-color-accent-base-contrast-default: #000000;
    --ds-color-neutral-background-default: #131c27;
    --ds-color-neutral-background-tinted: #192432;
    --ds-color-neutral-surface-default: #202d3e;
    --ds-color-neutral-surface-tinted: #293546;
    --ds-color-neutral-surface-hover: #303c4c;
    --ds-color-neutral-surface-active: #394553;
    --ds-color-neutral-border-subtle: #475260;
    --ds-color-neutral-border-default: #747c87;
    --ds-color-neutral-border-strong: #9da2aa;
    --ds-color-neutral-text-subtle: #9da2aa;
    --ds-color-neutral-text-default: #e3e5e7;
    --ds-color-neutral-base-default: #a6acb2;
    --ds-color-neutral-base-hover: #90979f;
    --ds-color-neutral-base-active: #7a828c;
    --ds-color-neutral-base-contrast-subtle: #1b1c1d;
    --ds-color-neutral-base-contrast-default: #000000;
    --ds-color-brand1-background-default: #2f1213;
    --ds-color-brand1-background-tinted: #3d1819;
    --ds-color-brand1-surface-default: #4b1d1f;
    --ds-color-brand1-surface-tinted: #5a2324;
    --ds-color-brand1-surface-hover: #652729;
    --ds-color-brand1-surface-active: #732d2f;
    --ds-color-brand1-border-subtle: #893538;
    --ds-color-brand1-border-default: #d05155;
    --ds-color-brand1-border-strong: #f67e81;
    --ds-color-brand1-text-subtle: #f67e81;
    --ds-color-brand1-text-default: #fdddde;
    --ds-color-brand1-base-default: #9f3e41;
    --ds-color-brand1-base-hover: #7f3234;
    --ds-color-brand1-base-active: #612628;
    --ds-color-brand1-base-contrast-subtle: #ffffff;
    --ds-color-brand1-base-contrast-default: #ffffff;
    --ds-color-brand2-background-default: #231a05;
    --ds-color-brand2-background-tinted: #2d2206;
    --ds-color-brand2-surface-default: #382a08;
    --ds-color-brand2-surface-tinted: #433209;
    --ds-color-brand2-surface-hover: #4c380b;
    --ds-color-brand2-surface-active: #56400c;
    --ds-color-brand2-border-subtle: #674d0e;
    --ds-color-brand2-border-default: #9e7516;
    --ds-color-brand2-border-strong: #ce991d;
    --ds-color-brand2-text-subtle: #ce991d;
    --ds-color-brand2-text-default: #f6e3b6;
    --ds-color-brand2-base-default: #513c0b;
    --ds-color-brand2-base-hover: #694e0f;
    --ds-color-brand2-base-active: #816012;
    --ds-color-brand2-base-contrast-subtle: #ddd9cf;
    --ds-color-brand2-base-contrast-default: #ffffff;
    --ds-color-brand3-background-default: #061d2e;
    --ds-color-brand3-background-tinted: #07253c;
    --ds-color-brand3-surface-default: #092e4a;
    --ds-color-brand3-surface-tinted: #0b3758;
    --ds-color-brand3-surface-hover: #0c3e63;
    --ds-color-brand3-surface-active: #0e4671;
    --ds-color-brand3-border-subtle: #115487;
    --ds-color-brand3-border-default: #1980ce;
    --ds-color-brand3-border-strong: #42a8f7;
    --ds-color-brand3-text-subtle: #42a8f7;
    --ds-color-brand3-text-default: #cde8fd;
    --ds-color-brand3-base-default: #135f9a;
    --ds-color-brand3-base-hover: #0f4c7a;
    --ds-color-brand3-base-active: #0b395d;
    --ds-color-brand3-base-contrast-subtle: #fbfcfd;
    --ds-color-brand3-base-contrast-default: #ffffff;
    --ds-color-success-background-default: #012106;
    --ds-color-success-background-tinted: #022a08;
    --ds-color-success-surface-default: #023409;
    --ds-color-success-surface-tinted: #033e0b;
    --ds-color-success-surface-hover: #03460c;
    --ds-color-success-surface-active: #044f0e;
    --ds-color-success-border-subtle: #045f11;
    --ds-color-success-border-default: #178f28;
    --ds-color-success-border-strong: #62b36d;
    --ds-color-success-text-subtle: #62b36d;
    --ds-color-success-text-default: #d4ead7;
    --ds-color-success-base-default: #138d24;
    --ds-color-success-base-hover: #3ca14b;
    --ds-color-success-base-active: #66b571;
    --ds-color-success-base-contrast-subtle: #010501;
    --ds-color-success-base-contrast-default: #000000;
    --ds-color-danger-background-default: #3a0808;
    --ds-color-danger-background-tinted: #4a0a0a;
    --ds-color-danger-surface-default: #5a0d0d;
    --ds-color-danger-surface-tinted: #6b0f0f;
    --ds-color-danger-surface-hover: #781111;
    --ds-color-danger-surface-active: #871313;
    --ds-color-danger-border-subtle: #a11717;
    --ds-color-danger-border-default: #cf5252;
    --ds-color-danger-border-strong: #df8b8b;
    --ds-color-danger-text-subtle: #df8b8b;
    --ds-color-danger-text-default: #f6dfdf;
    --ds-color-danger-base-default: #d76e6e;
    --ds-color-danger-base-hover: #df8b8b;
    --ds-color-danger-base-active: #e7a8a8;
    --ds-color-danger-base-contrast-subtle: #271414;
    --ds-color-danger-base-contrast-default: #000000;
    --ds-color-info-background-default: #031d31;
    --ds-color-info-background-tinted: #03253f;
    --ds-color-info-surface-default: #042e4e;
    --ds-color-info-surface-tinted: #05375d;
    --ds-color-info-surface-hover: #053d68;
    --ds-color-info-surface-active: #064676;
    --ds-color-info-border-subtle: #07538d;
    --ds-color-info-border-default: #2480c7;
    --ds-color-info-border-strong: #69a8d8;
    --ds-color-info-text-subtle: #69a8d8;
    --ds-color-info-text-default: #d6e7f4;
    --ds-color-info-base-default: #2d85c9;
    --ds-color-info-base-hover: #519ad2;
    --ds-color-info-base-active: #77b0dc;
    --ds-color-info-base-contrast-subtle: #050e15;
    --ds-color-info-base-contrast-default: #000000;
    --ds-color-warning-background-default: #251904;
    --ds-color-warning-background-tinted: #312006;
    --ds-color-warning-surface-default: #3c2807;
    --ds-color-warning-surface-tinted: #483008;
    --ds-color-warning-surface-hover: #513609;
    --ds-color-warning-surface-active: #5d3d0b;
    --ds-color-warning-border-subtle: #6f490d;
    --ds-color-warning-border-default: #a97013;
    --ds-color-warning-border-strong: #dd9219;
    --ds-color-warning-text-subtle: #dd9219;
    --ds-color-warning-text-default: #f9e2bc;
    --ds-color-warning-base-default: #60400b;
    --ds-color-warning-base-hover: #7a510e;
    --ds-color-warning-base-active: #946211;
    --ds-color-warning-base-contrast-subtle: #e6e2d9;
    --ds-color-warning-base-contrast-default: #ffffff;
    --ds-color-focus-inner: #131c27;
    --ds-color-focus-outer: #e3e5e7;
    --ds-link-color-visited: #b49acd;

    color-scheme: dark;
  }

  @media (prefers-color-scheme: dark) {
    [data-color-scheme='auto'] {
      --ds-color-accent-background-default: #001c35;
      --ds-color-accent-background-tinted: #002445;
      --ds-color-accent-surface-default: #002d55;
      --ds-color-accent-surface-tinted: #003565;
      --ds-color-accent-surface-hover: #003c71;
      --ds-color-accent-surface-active: #004481;
      --ds-color-accent-border-subtle: #00519a;
      --ds-color-accent-border-default: #307fc7;
      --ds-color-accent-border-strong: #70a7d8;
      --ds-color-accent-text-subtle: #70a7d8;
      --ds-color-accent-text-default: #d7e7f4;
      --ds-color-accent-base-default: #4c91cf;
      --ds-color-accent-base-hover: #6fa6d8;
      --ds-color-accent-base-active: #92bce1;
      --ds-color-accent-base-contrast-subtle: #0d1924;
      --ds-color-accent-base-contrast-default: #000000;
      --ds-color-neutral-background-default: #131c27;
      --ds-color-neutral-background-tinted: #192432;
      --ds-color-neutral-surface-default: #202d3e;
      --ds-color-neutral-surface-tinted: #293546;
      --ds-color-neutral-surface-hover: #303c4c;
      --ds-color-neutral-surface-active: #394553;
      --ds-color-neutral-border-subtle: #475260;
      --ds-color-neutral-border-default: #747c87;
      --ds-color-neutral-border-strong: #9da2aa;
      --ds-color-neutral-text-subtle: #9da2aa;
      --ds-color-neutral-text-default: #e3e5e7;
      --ds-color-neutral-base-default: #a6acb2;
      --ds-color-neutral-base-hover: #90979f;
      --ds-color-neutral-base-active: #7a828c;
      --ds-color-neutral-base-contrast-subtle: #1b1c1d;
      --ds-color-neutral-base-contrast-default: #000000;
      --ds-color-brand1-background-default: #2f1213;
      --ds-color-brand1-background-tinted: #3d1819;
      --ds-color-brand1-surface-default: #4b1d1f;
      --ds-color-brand1-surface-tinted: #5a2324;
      --ds-color-brand1-surface-hover: #652729;
      --ds-color-brand1-surface-active: #732d2f;
      --ds-color-brand1-border-subtle: #893538;
      --ds-color-brand1-border-default: #d05155;
      --ds-color-brand1-border-strong: #f67e81;
      --ds-color-brand1-text-subtle: #f67e81;
      --ds-color-brand1-text-default: #fdddde;
      --ds-color-brand1-base-default: #9f3e41;
      --ds-color-brand1-base-hover: #7f3234;
      --ds-color-brand1-base-active: #612628;
      --ds-color-brand1-base-contrast-subtle: #ffffff;
      --ds-color-brand1-base-contrast-default: #ffffff;
      --ds-color-brand2-background-default: #231a05;
      --ds-color-brand2-background-tinted: #2d2206;
      --ds-color-brand2-surface-default: #382a08;
      --ds-color-brand2-surface-tinted: #433209;
      --ds-color-brand2-surface-hover: #4c380b;
      --ds-color-brand2-surface-active: #56400c;
      --ds-color-brand2-border-subtle: #674d0e;
      --ds-color-brand2-border-default: #9e7516;
      --ds-color-brand2-border-strong: #ce991d;
      --ds-color-brand2-text-subtle: #ce991d;
      --ds-color-brand2-text-default: #f6e3b6;
      --ds-color-brand2-base-default: #513c0b;
      --ds-color-brand2-base-hover: #694e0f;
      --ds-color-brand2-base-active: #816012;
      --ds-color-brand2-base-contrast-subtle: #ddd9cf;
      --ds-color-brand2-base-contrast-default: #ffffff;
      --ds-color-brand3-background-default: #061d2e;
      --ds-color-brand3-background-tinted: #07253c;
      --ds-color-brand3-surface-default: #092e4a;
      --ds-color-brand3-surface-tinted: #0b3758;
      --ds-color-brand3-surface-hover: #0c3e63;
      --ds-color-brand3-surface-active: #0e4671;
      --ds-color-brand3-border-subtle: #115487;
      --ds-color-brand3-border-default: #1980ce;
      --ds-color-brand3-border-strong: #42a8f7;
      --ds-color-brand3-text-subtle: #42a8f7;
      --ds-color-brand3-text-default: #cde8fd;
      --ds-color-brand3-base-default: #135f9a;
      --ds-color-brand3-base-hover: #0f4c7a;
      --ds-color-brand3-base-active: #0b395d;
      --ds-color-brand3-base-contrast-subtle: #fbfcfd;
      --ds-color-brand3-base-contrast-default: #ffffff;
      --ds-color-success-background-default: #012106;
      --ds-color-success-background-tinted: #022a08;
      --ds-color-success-surface-default: #023409;
      --ds-color-success-surface-tinted: #033e0b;
      --ds-color-success-surface-hover: #03460c;
      --ds-color-success-surface-active: #044f0e;
      --ds-color-success-border-subtle: #045f11;
      --ds-color-success-border-default: #178f28;
      --ds-color-success-border-strong: #62b36d;
      --ds-color-success-text-subtle: #62b36d;
      --ds-color-success-text-default: #d4ead7;
      --ds-color-success-base-default: #138d24;
      --ds-color-success-base-hover: #3ca14b;
      --ds-color-success-base-active: #66b571;
      --ds-color-success-base-contrast-subtle: #010501;
      --ds-color-success-base-contrast-default: #000000;
      --ds-color-danger-background-default: #3a0808;
      --ds-color-danger-background-tinted: #4a0a0a;
      --ds-color-danger-surface-default: #5a0d0d;
      --ds-color-danger-surface-tinted: #6b0f0f;
      --ds-color-danger-surface-hover: #781111;
      --ds-color-danger-surface-active: #871313;
      --ds-color-danger-border-subtle: #a11717;
      --ds-color-danger-border-default: #cf5252;
      --ds-color-danger-border-strong: #df8b8b;
      --ds-color-danger-text-subtle: #df8b8b;
      --ds-color-danger-text-default: #f6dfdf;
      --ds-color-danger-base-default: #d76e6e;
      --ds-color-danger-base-hover: #df8b8b;
      --ds-color-danger-base-active: #e7a8a8;
      --ds-color-danger-base-contrast-subtle: #271414;
      --ds-color-danger-base-contrast-default: #000000;
      --ds-color-info-background-default: #031d31;
      --ds-color-info-background-tinted: #03253f;
      --ds-color-info-surface-default: #042e4e;
      --ds-color-info-surface-tinted: #05375d;
      --ds-color-info-surface-hover: #053d68;
      --ds-color-info-surface-active: #064676;
      --ds-color-info-border-subtle: #07538d;
      --ds-color-info-border-default: #2480c7;
      --ds-color-info-border-strong: #69a8d8;
      --ds-color-info-text-subtle: #69a8d8;
      --ds-color-info-text-default: #d6e7f4;
      --ds-color-info-base-default: #2d85c9;
      --ds-color-info-base-hover: #519ad2;
      --ds-color-info-base-active: #77b0dc;
      --ds-color-info-base-contrast-subtle: #050e15;
      --ds-color-info-base-contrast-default: #000000;
      --ds-color-warning-background-default: #251904;
      --ds-color-warning-background-tinted: #312006;
      --ds-color-warning-surface-default: #3c2807;
      --ds-color-warning-surface-tinted: #483008;
      --ds-color-warning-surface-hover: #513609;
      --ds-color-warning-surface-active: #5d3d0b;
      --ds-color-warning-border-subtle: #6f490d;
      --ds-color-warning-border-default: #a97013;
      --ds-color-warning-border-strong: #dd9219;
      --ds-color-warning-text-subtle: #dd9219;
      --ds-color-warning-text-default: #f9e2bc;
      --ds-color-warning-base-default: #60400b;
      --ds-color-warning-base-hover: #7a510e;
      --ds-color-warning-base-active: #946211;
      --ds-color-warning-base-contrast-subtle: #e6e2d9;
      --ds-color-warning-base-contrast-default: #ffffff;
      --ds-color-focus-inner: #131c27;
      --ds-color-focus-outer: #e3e5e7;
      --ds-link-color-visited: #b49acd;

      color-scheme: dark;
    }
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.typography.primary {
  :root,
  [data-typography='primary'] {
    --ds-font-family: Inter;
    --ds-font-weight-medium: 500;
    --ds-font-weight-semibold: 600;
    --ds-font-weight-regular: 400;
    --ds-heading-2xl-font-weight: 500;
    --ds-heading-2xl-line-height: 1.3;
    --ds-heading-2xl-font-size: 3.75rem;
    --ds-heading-2xl-letter-spacing: -1%;
    --ds-heading-xl-font-weight: 500;
    --ds-heading-xl-line-height: 1.3;
    --ds-heading-xl-font-size: 3rem;
    --ds-heading-xl-letter-spacing: -1%;
    --ds-heading-lg-font-weight: 500;
    --ds-heading-lg-line-height: 1.3;
    --ds-heading-lg-font-size: 2.25rem;
    --ds-heading-lg-letter-spacing: -0.5%;
    --ds-heading-md-font-weight: 500;
    --ds-heading-md-line-height: 1.3;
    --ds-heading-md-font-size: 1.875rem;
    --ds-heading-md-letter-spacing: -0.25%;
    --ds-heading-sm-font-weight: 500;
    --ds-heading-sm-line-height: 1.3;
    --ds-heading-sm-font-size: 1.5rem;
    --ds-heading-sm-letter-spacing: 0%;
    --ds-heading-xs-font-weight: 500;
    --ds-heading-xs-line-height: 1.3;
    --ds-heading-xs-font-size: 1.3125rem;
    --ds-heading-xs-letter-spacing: 0.15%;
    --ds-heading-2xs-font-weight: 500;
    --ds-heading-2xs-line-height: 1.3;
    --ds-heading-2xs-font-size: 1.125rem;
    --ds-heading-2xs-letter-spacing: 0.15%;
    --ds-body-xl-font-weight: 400;
    --ds-body-xl-line-height: 1.5;
    --ds-body-xl-font-size: 1.5rem;
    --ds-body-xl-letter-spacing: 0.5%;
    --ds-body-lg-font-weight: 400;
    --ds-body-lg-line-height: 1.5;
    --ds-body-lg-font-size: 1.3125rem;
    --ds-body-lg-letter-spacing: 0.5%;
    --ds-body-md-font-weight: 400;
    --ds-body-md-line-height: 1.5;
    --ds-body-md-font-size: 1.125rem;
    --ds-body-md-letter-spacing: 0.5%;
    --ds-body-sm-font-weight: 400;
    --ds-body-sm-line-height: 1.5;
    --ds-body-sm-font-size: 1rem;
    --ds-body-sm-letter-spacing: 0.25%;
    --ds-body-xs-font-weight: 400;
    --ds-body-xs-line-height: 1.5;
    --ds-body-xs-font-size: 0.875rem;
    --ds-body-xs-letter-spacing: 0.15%;
    --ds-body-short-xl-font-weight: 400;
    --ds-body-short-xl-line-height: 1.3;
    --ds-body-short-xl-font-size: 1.5rem;
    --ds-body-short-xl-letter-spacing: 0.5%;
    --ds-body-short-lg-font-weight: 400;
    --ds-body-short-lg-line-height: 1.3;
    --ds-body-short-lg-font-size: 1.3125rem;
    --ds-body-short-lg-letter-spacing: 0.5%;
    --ds-body-short-md-font-weight: 400;
    --ds-body-short-md-line-height: 1.3;
    --ds-body-short-md-font-size: 1.125rem;
    --ds-body-short-md-letter-spacing: 0.5%;
    --ds-body-short-sm-font-weight: 400;
    --ds-body-short-sm-line-height: 1.3;
    --ds-body-short-sm-font-size: 1rem;
    --ds-body-short-sm-letter-spacing: 0.25%;
    --ds-body-short-xs-font-weight: 400;
    --ds-body-short-xs-line-height: 1.3;
    --ds-body-short-xs-font-size: 0.875rem;
    --ds-body-short-xs-letter-spacing: 0.15%;
    --ds-body-long-xl-font-weight: 400;
    --ds-body-long-xl-line-height: 1.7;
    --ds-body-long-xl-font-size: 1.5rem;
    --ds-body-long-xl-letter-spacing: 0.5%;
    --ds-body-long-lg-font-weight: 400;
    --ds-body-long-lg-line-height: 1.7;
    --ds-body-long-lg-font-size: 1.3125rem;
    --ds-body-long-lg-letter-spacing: 0.5%;
    --ds-body-long-md-font-weight: 400;
    --ds-body-long-md-line-height: 1.7;
    --ds-body-long-md-font-size: 1.125rem;
    --ds-body-long-md-letter-spacing: 0.5%;
    --ds-body-long-sm-font-weight: 400;
    --ds-body-long-sm-line-height: 1.7;
    --ds-body-long-sm-font-size: 1rem;
    --ds-body-long-sm-letter-spacing: 0.25%;
    --ds-body-long-xs-font-weight: 400;
    --ds-body-long-xs-line-height: 1.7;
    --ds-body-long-xs-font-size: 0.875rem;
    --ds-body-long-xs-letter-spacing: 0.15%;
    --ds-line-height-sm: 1.3;
    --ds-line-height-md: 1.5;
    --ds-line-height-lg: 1.7;
    --ds-font-size-1: 0.75rem;
    --ds-font-size-2: 0.875rem;
    --ds-font-size-3: 1rem;
    --ds-font-size-4: 1.125rem;
    --ds-font-size-5: 1.3125rem;
    --ds-font-size-6: 1.5rem;
    --ds-font-size-7: 1.875rem;
    --ds-font-size-8: 2.25rem;
    --ds-font-size-9: 3rem;
    --ds-font-size-10: 3.75rem;
    --ds-letter-spacing-1: -1%;
    --ds-letter-spacing-2: -0.5%;
    --ds-letter-spacing-3: -0.25%;
    --ds-letter-spacing-4: -0.15%;
    --ds-letter-spacing-5: 0%;
    --ds-letter-spacing-6: 0.15%;
    --ds-letter-spacing-7: 0.25%;
    --ds-letter-spacing-8: 0.5%;
    --ds-letter-spacing-9: 1.5%;
  }
}
/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  :root,
  [data-color-scheme],
  [data-color='accent'] {
    --ds-color-background-default: var(--ds-color-accent-background-default);
    --ds-color-background-tinted: var(--ds-color-accent-background-tinted);
    --ds-color-surface-default: var(--ds-color-accent-surface-default);
    --ds-color-surface-tinted: var(--ds-color-accent-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-accent-surface-hover);
    --ds-color-surface-active: var(--ds-color-accent-surface-active);
    --ds-color-border-subtle: var(--ds-color-accent-border-subtle);
    --ds-color-border-default: var(--ds-color-accent-border-default);
    --ds-color-border-strong: var(--ds-color-accent-border-strong);
    --ds-color-text-subtle: var(--ds-color-accent-text-subtle);
    --ds-color-text-default: var(--ds-color-accent-text-default);
    --ds-color-base-default: var(--ds-color-accent-base-default);
    --ds-color-base-hover: var(--ds-color-accent-base-hover);
    --ds-color-base-active: var(--ds-color-accent-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-accent-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-accent-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='brand1'],
  [data-color-scheme][data-color='brand1'] {
    --ds-color-background-default: var(--ds-color-brand1-background-default);
    --ds-color-background-tinted: var(--ds-color-brand1-background-tinted);
    --ds-color-surface-default: var(--ds-color-brand1-surface-default);
    --ds-color-surface-tinted: var(--ds-color-brand1-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-brand1-surface-hover);
    --ds-color-surface-active: var(--ds-color-brand1-surface-active);
    --ds-color-border-subtle: var(--ds-color-brand1-border-subtle);
    --ds-color-border-default: var(--ds-color-brand1-border-default);
    --ds-color-border-strong: var(--ds-color-brand1-border-strong);
    --ds-color-text-subtle: var(--ds-color-brand1-text-subtle);
    --ds-color-text-default: var(--ds-color-brand1-text-default);
    --ds-color-base-default: var(--ds-color-brand1-base-default);
    --ds-color-base-hover: var(--ds-color-brand1-base-hover);
    --ds-color-base-active: var(--ds-color-brand1-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-brand1-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-brand1-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='brand2'],
  [data-color-scheme][data-color='brand2'] {
    --ds-color-background-default: var(--ds-color-brand2-background-default);
    --ds-color-background-tinted: var(--ds-color-brand2-background-tinted);
    --ds-color-surface-default: var(--ds-color-brand2-surface-default);
    --ds-color-surface-tinted: var(--ds-color-brand2-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-brand2-surface-hover);
    --ds-color-surface-active: var(--ds-color-brand2-surface-active);
    --ds-color-border-subtle: var(--ds-color-brand2-border-subtle);
    --ds-color-border-default: var(--ds-color-brand2-border-default);
    --ds-color-border-strong: var(--ds-color-brand2-border-strong);
    --ds-color-text-subtle: var(--ds-color-brand2-text-subtle);
    --ds-color-text-default: var(--ds-color-brand2-text-default);
    --ds-color-base-default: var(--ds-color-brand2-base-default);
    --ds-color-base-hover: var(--ds-color-brand2-base-hover);
    --ds-color-base-active: var(--ds-color-brand2-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-brand2-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-brand2-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='brand3'],
  [data-color-scheme][data-color='brand3'] {
    --ds-color-background-default: var(--ds-color-brand3-background-default);
    --ds-color-background-tinted: var(--ds-color-brand3-background-tinted);
    --ds-color-surface-default: var(--ds-color-brand3-surface-default);
    --ds-color-surface-tinted: var(--ds-color-brand3-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-brand3-surface-hover);
    --ds-color-surface-active: var(--ds-color-brand3-surface-active);
    --ds-color-border-subtle: var(--ds-color-brand3-border-subtle);
    --ds-color-border-default: var(--ds-color-brand3-border-default);
    --ds-color-border-strong: var(--ds-color-brand3-border-strong);
    --ds-color-text-subtle: var(--ds-color-brand3-text-subtle);
    --ds-color-text-default: var(--ds-color-brand3-text-default);
    --ds-color-base-default: var(--ds-color-brand3-base-default);
    --ds-color-base-hover: var(--ds-color-brand3-base-hover);
    --ds-color-base-active: var(--ds-color-brand3-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-brand3-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-brand3-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='danger'],
  [data-color-scheme][data-color='danger'] {
    --ds-color-background-default: var(--ds-color-danger-background-default);
    --ds-color-background-tinted: var(--ds-color-danger-background-tinted);
    --ds-color-surface-default: var(--ds-color-danger-surface-default);
    --ds-color-surface-tinted: var(--ds-color-danger-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-danger-surface-hover);
    --ds-color-surface-active: var(--ds-color-danger-surface-active);
    --ds-color-border-subtle: var(--ds-color-danger-border-subtle);
    --ds-color-border-default: var(--ds-color-danger-border-default);
    --ds-color-border-strong: var(--ds-color-danger-border-strong);
    --ds-color-text-subtle: var(--ds-color-danger-text-subtle);
    --ds-color-text-default: var(--ds-color-danger-text-default);
    --ds-color-base-default: var(--ds-color-danger-base-default);
    --ds-color-base-hover: var(--ds-color-danger-base-hover);
    --ds-color-base-active: var(--ds-color-danger-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-danger-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-danger-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='info'],
  [data-color-scheme][data-color='info'] {
    --ds-color-background-default: var(--ds-color-info-background-default);
    --ds-color-background-tinted: var(--ds-color-info-background-tinted);
    --ds-color-surface-default: var(--ds-color-info-surface-default);
    --ds-color-surface-tinted: var(--ds-color-info-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-info-surface-hover);
    --ds-color-surface-active: var(--ds-color-info-surface-active);
    --ds-color-border-subtle: var(--ds-color-info-border-subtle);
    --ds-color-border-default: var(--ds-color-info-border-default);
    --ds-color-border-strong: var(--ds-color-info-border-strong);
    --ds-color-text-subtle: var(--ds-color-info-text-subtle);
    --ds-color-text-default: var(--ds-color-info-text-default);
    --ds-color-base-default: var(--ds-color-info-base-default);
    --ds-color-base-hover: var(--ds-color-info-base-hover);
    --ds-color-base-active: var(--ds-color-info-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-info-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-info-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='neutral'],
  [data-color-scheme][data-color='neutral'] {
    --ds-color-background-default: var(--ds-color-neutral-background-default);
    --ds-color-background-tinted: var(--ds-color-neutral-background-tinted);
    --ds-color-surface-default: var(--ds-color-neutral-surface-default);
    --ds-color-surface-tinted: var(--ds-color-neutral-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-neutral-surface-hover);
    --ds-color-surface-active: var(--ds-color-neutral-surface-active);
    --ds-color-border-subtle: var(--ds-color-neutral-border-subtle);
    --ds-color-border-default: var(--ds-color-neutral-border-default);
    --ds-color-border-strong: var(--ds-color-neutral-border-strong);
    --ds-color-text-subtle: var(--ds-color-neutral-text-subtle);
    --ds-color-text-default: var(--ds-color-neutral-text-default);
    --ds-color-base-default: var(--ds-color-neutral-base-default);
    --ds-color-base-hover: var(--ds-color-neutral-base-hover);
    --ds-color-base-active: var(--ds-color-neutral-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-neutral-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-neutral-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='success'],
  [data-color-scheme][data-color='success'] {
    --ds-color-background-default: var(--ds-color-success-background-default);
    --ds-color-background-tinted: var(--ds-color-success-background-tinted);
    --ds-color-surface-default: var(--ds-color-success-surface-default);
    --ds-color-surface-tinted: var(--ds-color-success-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-success-surface-hover);
    --ds-color-surface-active: var(--ds-color-success-surface-active);
    --ds-color-border-subtle: var(--ds-color-success-border-subtle);
    --ds-color-border-default: var(--ds-color-success-border-default);
    --ds-color-border-strong: var(--ds-color-success-border-strong);
    --ds-color-text-subtle: var(--ds-color-success-text-subtle);
    --ds-color-text-default: var(--ds-color-success-text-default);
    --ds-color-base-default: var(--ds-color-success-base-default);
    --ds-color-base-hover: var(--ds-color-success-base-hover);
    --ds-color-base-active: var(--ds-color-success-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-success-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-success-base-contrast-default);
  }
}

/**
 * These files are generated from design tokens defind using Token Studio
 */

@layer ds.theme.color {
  [data-color='warning'],
  [data-color-scheme][data-color='warning'] {
    --ds-color-background-default: var(--ds-color-warning-background-default);
    --ds-color-background-tinted: var(--ds-color-warning-background-tinted);
    --ds-color-surface-default: var(--ds-color-warning-surface-default);
    --ds-color-surface-tinted: var(--ds-color-warning-surface-tinted);
    --ds-color-surface-hover: var(--ds-color-warning-surface-hover);
    --ds-color-surface-active: var(--ds-color-warning-surface-active);
    --ds-color-border-subtle: var(--ds-color-warning-border-subtle);
    --ds-color-border-default: var(--ds-color-warning-border-default);
    --ds-color-border-strong: var(--ds-color-warning-border-strong);
    --ds-color-text-subtle: var(--ds-color-warning-text-subtle);
    --ds-color-text-default: var(--ds-color-warning-text-default);
    --ds-color-base-default: var(--ds-color-warning-base-default);
    --ds-color-base-hover: var(--ds-color-warning-base-hover);
    --ds-color-base-active: var(--ds-color-warning-base-active);
    --ds-color-base-contrast-subtle: var(--ds-color-warning-base-contrast-subtle);
    --ds-color-base-contrast-default: var(--ds-color-warning-base-contrast-default);
  }
}

@layer ds.base {
  /**
 * Visually hide an element, but leave it available for screen readers
 */
  .ds-sr-only {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  :root {
    --ds-font-size-minus-1: max(0.9em, 0.875rem); /* Default to 90% of font-size, but minimum 14px */
    --ds-font-size-plus-1: 1.1em; /* Default to 110% */

    /* font-size adjustments if supporting round() */
    @supports (width: round(down, 0.1em, 1px)) {
      --ds-font-size-minus-1: round(
        down,
        max(0.9em, 0.875rem),
        0.0625rem
      ); /* Default to 90% of font-size, but minimum 14px */
      --ds-font-size-plus-1: round(down, 1.1em, 0.0625rem); /* Default to 110% */
    }
  }

  :root,
  [data-color-scheme] {
    --dsc-focus-boxShadow: 0 0 0 var(--ds-border-width-focus) var(--ds-color-focus-inner);
    --dsc-focus-boxShadow-inset: inset 0 0 0 calc(var(--ds-border-width-focus) * 2) var(--ds-color-focus-inner);
    --dsc-focus-outline: var(--ds-color-focus-outer) solid var(--ds-border-width-focus);
  }

  /* Set default background and color on <body> (not :root) to align with best practice */
  body,
  [data-color-scheme] {
    color: var(--ds-color-neutral-text-default);
    background: var(--ds-color-neutral-background-default);
  }

  /**
   * Apply a focus outline on an element when it is focused with keyboard
   */
  .ds-focus:focus-visible {
    @composes ds-focus--visible from './base.css';
  }

  /**
   * Apply a focus outline that is inset on an element when it is focused with keyboard
   */
  .ds-focus--inset:focus-visible {
    @composes ds-focus--visible--inset from './base.css';
  }

  /**
   * Focus outline that can be composed if it needs a specific selector
   */
  .ds-focus--visible {
    /**
     * We use both box-shadow and outline to ensure that the focus style is visible,
     * in case box-shadow is overridden.
     */
    box-shadow: var(--_ds--focus, var(--dsc-focus-boxShadow));
    outline: var(--_ds--focus, var(--dsc-focus-outline));
    outline-offset: var(--_ds--focus, var(--ds-border-width-focus));

    /**
     * Using CSS custom properties toggle trick to ensure focus-visible is only shown on outermost element
     * https://css-tricks.com/the-css-custom-property-toggle-trick/
     */
    * {
      --_ds--focus: ;
    }
  }

  /**
   * Focus outline on the inside that can be composed if it needs a specific selector
   */
  .ds-focus--visible--inset {
    /**
     * We use both box-shadow and outline to ensure that the focus style is visible,
     * in case box-shadow is overridden.
     */
    box-shadow: var(--_ds--focus, var(--dsc-focus-boxShadow-inset));
    outline: var(--_ds--focus, var(--dsc-focus-outline));
    outline-offset: calc(var(--_ds--focus, var(--ds-border-width-focus)) * -1);

    /**
     * Using CSS custom properties toggle trick to ensure focus-visible is only shown on outermost element
     * https://css-tricks.com/the-css-custom-property-toggle-trick/
     */
    * {
      --_ds--focus: ;
    }
  }

  [data-size='xs'] {
    font-weight: var(--ds-body-xs-font-weight);
    line-height: var(--ds-body-xs-line-height);
    font-size: var(--ds-body-xs-font-size);
    letter-spacing: var(--ds-body-xs-letter-spacing);
  }

  [data-size='sm'] {
    font-weight: var(--ds-body-sm-font-weight);
    line-height: var(--ds-body-sm-line-height);
    font-size: var(--ds-body-sm-font-size);
    letter-spacing: var(--ds-body-sm-letter-spacing);
  }

  /* Setting default font on <body> not :root/<html> to ensure 1rem is still 16px */
  body,
  [data-size='md'] {
    font-weight: var(--ds-body-md-font-weight);
    line-height: var(--ds-body-md-line-height);
    font-size: var(--ds-body-md-font-size);
    letter-spacing: var(--ds-body-md-letter-spacing);
  }

  [data-size='lg'] {
    font-weight: var(--ds-body-lg-font-weight);
    line-height: var(--ds-body-lg-line-height);
    font-size: var(--ds-body-lg-font-size);
    letter-spacing: var(--ds-body-lg-letter-spacing);
  }

  [data-size='xl'] {
    font-weight: var(--ds-body-xl-font-weight);
    line-height: var(--ds-body-xl-line-height);
    font-size: var(--ds-body-xl-font-size);
    letter-spacing: var(--ds-body-xl-letter-spacing);
  }
}

.ds-tag {
  --dsc-tag-background: var(--ds-color-surface-tinted);
  --dsc-tag-color: var(--ds-color-text-default);
  --dsc-tag-min-height: var(--ds-size-8);
  --dsc-tag-padding: 0 var(--ds-size-2);

  align-items: center;
  background: var(--dsc-tag-background);
  border-radius: var(--ds-border-radius-sm);
  box-sizing: border-box;
  color: var(--dsc-tag-color);
  height: fit-content; /* In case placed in display: flex */
  line-height: var(--ds-line-height-sm);
  min-height: var(--dsc-tag-min-height);
  padding: var(--dsc-tag-padding);
  width: max-content;
  word-break: break-word;

  & :where(img, svg) {
    flex-shrink: 0;
    font-size: 1.25em;
  }

  &:not([hidden]) {
    display: inline-flex;
  }

  @media (forced-colors: active) {
    border-width: var(--ds-border-width-default);
    border-style: solid;
    border-color: CanvasText;
  }
}

.ds-button {
  --dsc-button-background--active: var(--ds-color-base-active);
  --dsc-button-background--hover: var(--ds-color-base-hover);
  --dsc-button-background: var(--ds-color-base-default);
  --dsc-button-color: var(--ds-color-base-contrast-default);
  --dsc-button-color--hover: var(--ds-color-base-contrast-default);
  --dsc-button-border-width: var(--ds-border-width-default);
  --dsc-button-border-style: solid;
  --dsc-button-border-color: transparent;
  --dsc-button-gap: var(--ds-size-2);
  --dsc-button-padding: var(--ds-size-2) var(--ds-size-4);
  --dsc-button-size: var(--ds-size-12);

  align-items: center;
  background: var(--dsc-button-background);
  border-radius: var(--ds-border-radius-default);
  border-width: var(--dsc-button-border-width);
  border-style: var(--dsc-button-border-style);
  border-color: var(--dsc-button-border-color);
  box-sizing: border-box;
  color: var(--dsc-button-color);
  cursor: pointer;
  font-family: inherit;
  font-weight: var(--ds-font-weight-medium);
  gap: var(--dsc-button-gap);
  height: fit-content; /* If placed in flex container */
  justify-content: center;
  line-height: var(--ds-line-height-sm);
  min-height: var(--dsc-button-size);
  min-width: var(--dsc-button-size);
  outline: none;
  padding: var(--dsc-button-padding);
  text-align: inherit;
  text-decoration: none;

  @composes ds-focus from './base.css';

  &[data-variant='secondary'],
  &[data-variant='tertiary'] {
    --dsc-button-background: transparent;
    --dsc-button-background--active: var(--ds-color-surface-active);
    --dsc-button-background--hover: var(--ds-color-surface-hover);
    --dsc-button-color: var(--ds-color-text-subtle);
    --dsc-button-color--hover: var(--ds-color-text-default);
  }
  &[data-variant='secondary'] {
    --dsc-button-border-color: var(--ds-color-border-strong);
  }

  &:not([data-size]) {
    font-size: inherit; /* Ensure inheriting font-size when <button> */
  }

  & :where(img, svg) {
    flex-shrink: 0;
    font-size: 1.25em;
  }

  &:focus-visible {
    position: relative; /* Place focusring on top */
  }

  &:where(:not([hidden])) {
    display: flex;
  }

  &[data-icon] {
    width: var(--dsc-button-size); /* Ensure it keeps square shape */
    height: var(--dsc-button-size); /* Ensure it keeps square shape */
    padding: 0;
  }

  &[data-fullwidth] {
    width: 100%;
    text-align: center;
  }

  /* Style spinner when in button */
  & .ds-spinner {
    font-size: 1.4em;
  }

  /**
   * States
   */

  @media (hover: hover) and (pointer: fine) {
    /* Only use hover for non-touch devices to prevent sticky-hovering, using :where to prevent adding specificity */
    &:where(:not(:disabled, [aria-disabled='true'], [aria-busy='true'])):hover {
      background: var(--dsc-button-background--hover);
      color: var(--dsc-button-color--hover);
    }
  }

  &[aria-busy='true'] {
    cursor: progress;
  }

  &:is(:disabled, [aria-disabled='true']) {
    cursor: not-allowed;
    opacity: var(--ds-opacity-disabled);

    /* When both aria-disabled and aria-busy is true, opacity should be 1 and cursor should be progress */
    &[aria-busy='true'] {
      opacity: 1;
      cursor: progress;
    }
  }

  /* Using :where to prevent adding specificity */
  &:where(:not(:disabled, [aria-disabled='true'], [aria-busy='true'])):active {
    background: var(--dsc-button-background--active);
  }
}

.ds-field {
  --dsc-field-content-spacing: var(--ds-size-2);

  /* The stack (https://every-layout.dev/layouts/stack/) */
  & > * {
    margin-block: 0;
  }
  & > * + * {
    margin-top: var(--dsc-field-content-spacing);
  }

  & [data-field='description'] {
    color: var(
      --ds-color-neutral-text-subtle
    ); /* TODO: Change to opacity or color-mix(currentColor, trasparent) to ensure contrast when parent element color changes? */
  }

  & input:not([hidden]) {
    display: block; /* Ensure input is not placed on same line as label/description/validation */
  }

  /**
   * States
   */
  &:has([aria-disabled='true']:not(u-option, [role='option'][aria-disabled='true']), :disabled:not(option)) > * {
    cursor: not-allowed;
    opacity: var(--ds-opacity-disabled);
  }

  &:has([aria-readonly='true'], [readonly]) label {
    --_dsc-label--readonly: ; /* Activate lock icon for label when readonly */
  }

  /**
   * Toggle inputs
   */
  &:has(input:is([type='radio'], [type='checkbox'])) {
    border-radius: var(--ds-border-radius-md);
    grid-template-areas: 'input content';
    grid-template-columns: auto 1fr;
    column-gap: var(--dsc-field-content-spacing);
    width: fit-content; /* Rather do display: grid + width: fit-content than display: inline-grid to encourage stacked radios */

    &:not([hidden]) {
      display: grid;
    }

    & > * {
      margin-block: 0; /* Reset "the stack" */
      grid-column: content; /* Only allow input in column 1 */
    }

    & label {
      --_dsc-label--readonly: initial; /* Never show lock icon on toggle inputs */
      font-weight: var(--ds-font-weight-regular);
    }

    & input {
      grid-column: input; /* Always place input in column 1 */
      grid-row: 1; /* Always place input in row 1 */
    }

    &:not(:has([readonly], [aria-disabled='true']:not(u-option), :disabled:not(option))) label {
      cursor: pointer;
    }

    &:has(input:focus-visible) {
      @composes ds-focus--visible from './base.css';
    }

    &:has(input:only-child) {
      gap: 0; /* No gap only <input> with aria-label/aria-labelledby */
    }

    /* Using .ds-input to ensure it's only our component */
    & .ds-input:is([type='radio'], [type='checkbox']):not([aria-label]) {
      translate: 0 calc((1lh - 100%) / 2); /* Align with first line of <label> text, but not if having aria-label as <label> */
    }

    &[data-position='end'] {
      grid-template-areas: 'content input';
      grid-template-columns: 1fr auto;
      width: auto;
    }
  }
}

/**
 * Affix
 */
.ds-field-affixes {
  --dsc-field-affix-border-width: var(--ds-border-width-default);
  --dsc-field-affix-border-style: solid;
  --dsc-field-affix-border-color: var(--ds-color-neutral-border-default);
  --dsc-field-affix-padding-inline: var(--ds-size-4);

  background: var(--ds-color-neutral-background-tinted);
  border-radius: var(--ds-border-radius-md);
  box-sizing: border-box;
  color: var(--ds-color-neutral-text-subtle);
  max-width: 100%;
  white-space: nowrap;

  &:not([hidden]) {
    display: flex;
  }

  &:has([size]) {
    width: fit-content;
  }

  & .ds-field-affix {
    align-items: center;
    border-width: var(--dsc-field-affix-border-width);
    border-style: var(--dsc-field-affix-border-style);
    border-color: var(--dsc-field-affix-border-color);
    flex-shrink: 0;
    padding-inline: var(--dsc-field-affix-padding-inline);

    &:not([hidden]) {
      display: flex;
    }

    &:first-child {
      border-top-left-radius: inherit;
      border-bottom-left-radius: inherit;
      border-right: 0;
    }

    &:last-child {
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
      border-left: 0;
    }
  }

  & .ds-input {
    border-width: var(--dsc-field-affix-border-width);
    border-style: var(--dsc-field-affix-border-style);
    flex: 1 1 auto;

    /* if it has affix after */
    &:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    /* if it has affix before */
    &:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

:where(.ds-input) {
  margin: 0; /* Reset native margin, but resepect parent selevtor `.someting > * { margin: ... }` */
}
.ds-input {
  --dsc-input-padding: var(--ds-size-2) var(--ds-size-3);
  --dsc-input-size--toggle: var(--ds-size-6);
  --dsc-input-size: var(--ds-size-12);
  /* Background */
  --dsc-input-background--readonly: var(--ds-color-neutral-background-tinted);
  --dsc-input-background: var(--ds-color-neutral-background-default);
  /* Border */
  --dsc-input-border-color--readonly: var(--ds-color-neutral-border-subtle);
  --dsc-input-border-color: var(--ds-color-neutral-border-default);
  --dsc-input-border-style: solid;
  --dsc-input-border-width--toggle: max(
    var(--ds-border-width-default),
    calc(var(--ds-size-1) / 2)
  ); /* Allow border-width to grow with font-size */
  --dsc-input-border-width: var(--ds-border-width-default);
  /* Color */
  --dsc-input-color--readonly: var(--ds-color-neutral-text-default);
  --dsc-input-color: var(--ds-color-neutral-text-default);
  /* Stroke is used as the dot in radio, and checkmark in checkboxes */
  --dsc-input-stroke-color: var(--ds-color-base-contrast-default);
  --dsc-input-stroke-color--invalid: var(--ds-color-danger-base-contrast-default);
  --dsc-input-stroke-width: 0.05em;
  /* Accent color, used in checkboxes and radio */
  --dsc-input-accent-color: var(--ds-color-base-default);
  --dsc-input-accent-color--invalid: var(--ds-color-danger-text-subtle);
  /* Checkmark with antialiasing is achieved by percentages 48% / 50% / 52% */
  --_dsc-input-diagonal-1: transparent calc(48% - var(--dsc-input-stroke-width));
  --_dsc-input-diagonal-2: currentcolor calc(50% - var(--dsc-input-stroke-width));
  --_dsc-input-diagonal-3: currentcolor calc(50% + var(--dsc-input-stroke-width));
  --_dsc-input-diagonal-4: transparent calc(52% + var(--dsc-input-stroke-width));
  --_dsc-input-spacing--toggle: calc(var(--ds-size-1) / 2);

  appearance: none;
  background: var(--dsc-input-background);
  border-radius: var(--ds-border-radius-md);
  border-width: var(--dsc-input-border-width);
  border-style: var(--dsc-input-border-style);
  border-color: var(--dsc-input-border-color);
  box-sizing: border-box;
  color: var(--dsc-input-color);
  font-family: inherit;
  height: var(--dsc-input-size);
  line-height: inherit;
  max-width: 100%; /* Ensure input does not grow outside bounds even with a high value in size="" or cols="" */
  min-width: 0; /* Allow shrinking in flex container, see https://ishadeed.com/article/min-max-css/#setting-min-width-to-zero-with-flexbox */
  padding: var(--dsc-input-padding);
  position: relative; /* Ensure foucs outline renders on top */
  vertical-align: middle; /* Remove space under when display: inline-block */

  @composes ds-focus from './base.css';

  @media (forced-colors: active) {
    border-color: ButtonText;
    background-color: Canvas;

    &:disabled,
    &[aria-disabled='true'],
    &[readonly] {
      border-color: GrayText;
    }
  }

  /* Round border-width up to nearest 1px if supported */
  @supports (width: round(down, 0.1em, 1px)) {
    border-width: round(up, var(--dsc-input-border-width), 0.0625rem);
  }

  &:not([data-size]) {
    font-size: inherit; /* Ensure inheriting font-size */
  }

  &:is(select) {
    padding-right: 2.4em;
    background-image: linear-gradient(
        45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      ),
      linear-gradient(
        -45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      );
    background-position: calc(100% - 1.2em + var(--dsc-input-stroke-width)), calc(100% - 0.8em);
    background-size: 0.4em 0.4em;
    background-repeat: no-repeat;

    @media (forced-colors: active) {
      appearance: auto; /* show chevron */
    }
  }

  &:is(textarea) {
    height: auto; /* Allow rows="" to set height */
    min-height: calc(
      var(--dsc-input-size) * 1.5
    ); /* Set a min-height to indicate this is a <textarea> and not an <input> */
    resize: vertical; /* Allow resizing vertically only */

    &:not([rows]) {
      field-sizing: content;
    }
  }

  /* Using select:where() to decrease specificity */
  &:not([size], [cols], select:where([data-width='auto'])) {
    width: 100%;
  }

  /**
   * States
   */
  &:checked,
  &:indeterminate:where([type='checkbox']) {
    background: var(--dsc-input-accent-color);
    border-color: var(--dsc-input-accent-color);
    color: var(--dsc-input-stroke-color);
  }

  &:disabled,
  &[aria-disabled='true'] {
    cursor: not-allowed;
    opacity: var(--ds-opacity-disabled);
  }

  &[aria-invalid='true'] {
    border-color: var(--dsc-input-accent-color--invalid);
  }

  /* Radio could match here if we check :indeterminate, so we check that by itself */
  &[aria-invalid='true']:where(:checked) {
    background: var(--dsc-input-accent-color--invalid);
    color: var(--dsc-input-stroke-color--invalid);
  }

  &[type='checkbox'][aria-invalid='true']:where(:indeterminate) {
    background: var(--dsc-input-accent-color--invalid);
    color: var(--dsc-input-stroke-color--invalid);
  }

  /* Using attribute [readonly] since pseudo selector :read-only is always true for checkbox, radio and select */
  &[readonly] {
    background: var(--dsc-input-background--readonly);
    border-color: var(--dsc-input-border-color--readonly);
    color: var(--dsc-input-color--readonly);

    @media (forced-colors: active) {
      border-color: GrayText;
    }
  }

  /**
   * Toggle inputs and select
   */
  &:read-only:not([readonly], [aria-disabled='true'], :disabled) {
    cursor: pointer;
  }

  /**
   * Toggle inputs
   */
  &[type='checkbox'],
  &[type='radio'] {
    border-width: var(--dsc-input-border-width--toggle);
    padding: var(--_dsc-input-spacing--toggle);
    flex-shrink: 0; /* Never shrink a toggle input */
    line-height: inherit; /* Inherit line height so we can use 1lh to align with first line of label */
    height: var(--dsc-input-size--toggle);
    width: var(--dsc-input-size--toggle);
    /* forced-color-adjust: none; */ /* Prevent browser from applying forced colors, since we need the background */

    @media (forced-colors: active) {
      color: Canvas;

      &:disabled,
      &[aria-disabled='true'],
      &[readonly] {
        border-color: GrayText;
      }
    }
  }

  &[type='radio'] {
    border-radius: var(--ds-border-radius-full);
  }

  &[type='radio']:checked {
    background-image: radial-gradient(circle closest-side, currentcolor 45%, transparent 50%);

    @media (forced-colors: active) {
      background-color: LinkText;
      border-color: LinkText;
      color: Canvas;
      forced-color-adjust: none; /* To be able to draw dot */
    }
  }

  &[type='checkbox'] {
    border-radius: var(--ds-border-radius-sm);
  }

  &[type='checkbox']:checked {
    background-origin: content-box;
    background-repeat: no-repeat;
    background-position: 10% 73%, 90% 50%;
    background-size: 35% 35%, 65% 65%;
    background-image: linear-gradient(
        45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      ),
      linear-gradient(
        -45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      );

    @media (forced-colors: active) {
      background-color: LinkText;
      border-color: LinkText;
      forced-color-adjust: none; /* To be able to draw check */
    }
  }

  &[type='checkbox']:indeterminate {
    background-origin: content-box;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    background-image: linear-gradient(
      transparent calc(48% - var(--dsc-input-stroke-width)),
      currentcolor calc(50% - var(--dsc-input-stroke-width)),
      currentcolor calc(50% + var(--dsc-input-stroke-width)),
      transparent calc(52% + var(--dsc-input-stroke-width))
    );

    @media (forced-colors: active) {
      background-color: LinkText;
      border-color: LinkText;
      forced-color-adjust: none; /* To be able to draw line */
    }
  }

  /**
   * Switch
   */
  &[role='switch']:is([type='radio'], [type='checkbox']) {
    --_dsc-input-circle-position: left;

    background-image: radial-gradient(circle closest-side, currentcolor 95%, transparent 100%);
    background-origin: content-box;
    background-position: var(--_dsc-input-circle-position);
    background-repeat: no-repeat;
    background-size: calc(var(--dsc-input-size--toggle) - var(--_dsc-input-spacing--toggle) * 2) 100%;
    border-radius: var(--ds-border-radius-full);
    padding-inline: 0; /* Reset to position circle correctly */
    transition: 0.2s background-position;
    width: calc(var(--dsc-input-size--toggle) * 2);

    &:checked {
      --_dsc-input-circle-position: right;

      @media (forced-colors: active) {
        color: CanvasText;
      }
    }

    @media (forced-colors: active) {
      color: GrayText;

      forced-color-adjust: none; /* To be able to draw switch */
      &[readonly] {
        color: GrayText;
      }

      &:disabled,
      &[aria-disabled='true'],
      &[readonly] {
        border-color: GrayText;
      }
    }
  }
}

.ds-label {
  --dsc-label-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' aria-hidden='true' viewBox='0 0 24 24'%3E%3Cpath fill-rule='evenodd' d='M12 2.25A4.75 4.75 0 0 0 7.25 7v2.25H7A1.75 1.75 0 0 0 5.25 11v9c0 .41.34.75.75.75h12a.75.75 0 0 0 .75-.75v-9A1.75 1.75 0 0 0 17 9.25h-.25V7A4.75 4.75 0 0 0 12 2.25m3.25 7V7a3.25 3.25 0 0 0-6.5 0v2.25zM12 13a1.5 1.5 0 0 0-.75 2.8V17a.75.75 0 0 0 1.5 0v-1.2A1.5 1.5 0 0 0 12 13'/%3E%3C/svg%3E");
  --dsc-label-icon-size: 1.2em;
  --dsc-label-icon-spacing: var(--ds-size-1);
  --_dsc-label--readonly: initial; /* Using technique https://css-tricks.com/the-css-custom-property-toggle-trick/ */

  font-weight: var(--ds-font-weight-medium);
  padding-inline-start: var(--_dsc-label--readonly) calc(var(--dsc-label-icon-size) + var(--dsc-label-icon-spacing));
  position: relative;

  &::before {
    background: currentcolor;
    content: var(--_dsc-label--readonly) '';
    display: inline-block;
    height: var(--dsc-label-icon-size);
    margin-inline: calc(
      (var(--dsc-label-icon-size) + var(--dsc-label-icon-spacing)) * -1
    ); /* Using margin instead of top/left to avoid position: relative and to support dir="rtl" */
    mask: center / contain no-repeat var(--dsc-label-icon-url);
    position: absolute;
    width: var(--dsc-label-icon-size);
    translate: 0 calc((1lh - var(--dsc-label-icon-size)) / 2); /* Center icon to line height */

    @media (forced-colors: active) {
      background: CanvasText;
    }
  }

  &[data-weight='semibold'] {
    font-weight: var(--ds-font-weight-semibold);
  }

  &[data-weight='regular'] {
    font-weight: var(--ds-font-weight-regular);
  }
}

.ds-multi-suggestion {
  --dsc-multi-select-option-background--selected: var(--ds-color-background-tinted);
  --dsc-multi-select-option-border-color: var(--ds-color-base-default);
  --dsc-multi-select-clear-gap: var(--ds-size-2);
  --dsc-multi-select-clear-padding: var(--ds-size-1);
  --dsc-multi-select-clear-size: var(--ds-size-9);
  --dsc-multi-select-clear-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='currentColor' d='M6.53 5.47a.75.75 0 0 0-1.06 1.06L10.94 12l-5.47 5.47a.75.75 0 1 0 1.06 1.06L12 13.06l5.47 5.47a.75.75 0 1 0 1.06-1.06L13.06 12l5.47-5.47a.75.75 0 0 0-1.06-1.06L12 10.94z'/%3E%3C/svg%3E");
  --dsc-multi-select-option-checkmark-url: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%221em%22%20height%3D%221em%22%20fill%3D%22none%22%20viewBox%3D%220%200%2024%2024%22%20focusable%3D%22false%22%20role%3D%22img%22%3E%3Cpath%20fill%3D%22currentColor%22%20fill-rule%3D%22evenodd%22%20d%3D%22M18.998%206.94a.75.75%200%200%201%20.063%201.058l-8%209a.75.75%200%200%201-1.091.032l-5-5a.75.75%200%201%201%201.06-1.06l4.438%204.437%207.471-8.405A.75.75%200%200%201%2019%206.939%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E');
  --dsc-multi-select-option-checkmark-size: var(--ds-size-7);
  --dsc-multi-select-list-gap: var(--ds-size-2);
  --dsc-multi-select-border-width: 1px;
  --dsc-multi-select-border-style: solid;
  --dsc-multi-select-border-color: var(--ds-color-neutral-border-default);

  box-sizing: border-box;
  flex-wrap: wrap;
  gap: var(--ds-size-1);
  position: relative;

  &:not([hidden]) {
    display: flex;
  }

  & > data {
    margin-bottom: var(--ds-size-1);

    &:has(+ data) {
      margin-right: var(--ds-size-1);
    }
  }

  & u-datalist {
    background: var(--ds-color-neutral-background-default);
    border-radius: var(--ds-border-radius-md);
    border-width: var(--dsc-multi-select-border-width);
    border-style: var(--dsc-multi-select-border-style);
    border-color: var(--dsc-multi-select-border-color);
    box-shadow: var(--ds-shadow-md);
    box-sizing: border-box;
    color: var(--ds-color-neutral-text-default);
    inset: 100% 0 auto 0;
    overflow-y: auto;
    position: absolute;
    z-index: 1600;
    margin-top: var(--dsc-multi-select-list-gap);
    max-height: 200px;

    /* Hide <multi-select.Empty> if any <multi-select.Option> is visible */
    &:has(u-option:not([hidden]):not([aria-disabled='true']):not([data-empty])) > u-option[data-empty] {
      display: none;
    }
    & > u-option[data-empty] {
      cursor: default;
      display: block;
    }

    &:not(:has(u-option:hover)) > u-option:focus-visible {
      border-left-color: var(--dsc-multi-select-option-border-color);
      background: var(--dsc-multi-select-option-background--selected);
      color: var(--ds-color-text-default);
    }

    /* Hide datalist if no children */
    &:empty {
      display: none;
    }

    & > * {
      padding: var(--ds-size-2) var(--ds-size-3);
      font-family: inherit;
    }

    & > :is(u-option) {
      padding-inline-start: var(--dsc-multi-select-option-checkmark-size);
      border: none;
      border-left: 5px solid transparent;
      outline: none;
      border-radius: var(--ds-border-radius-sm);
      cursor: pointer;
      position: relative;

      &[selected='true'] {
        &::before {
          content: '';
          position: absolute;
          left: 0;
          mask: var(--dsc-multi-select-option-checkmark-url) center / contain no-repeat;
          background: currentcolor;
          width: var(--dsc-multi-select-option-checkmark-size);
          height: var(--dsc-multi-select-option-checkmark-size);
        }
      }

      @media (hover: hover) and (pointer: fine) {
        &:not([data-empty]):hover {
          border-left-color: var(--dsc-multi-select-option-border-color);
          background: var(--dsc-multi-select-option-background--selected);
        }
      }
    }
  }

  &:has(input:placeholder-shown) input {
    padding-right: 2.4em;
    background-image: linear-gradient(
        45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      ),
      linear-gradient(
        -45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      );
    background-position: calc(100% - 1.2em + var(--dsc-input-stroke-width)), calc(100% - 0.8em);
    background-size: 0.4em 0.4em;
    background-repeat: no-repeat;

    @media (forced-colors: active) {
      appearance: auto; /* show chevron */
    }
  }

  /**
   * Clear button
   */
  &:has(input:placeholder-shown) button[type='reset'],
  &:has(input:is(:read-only, :disabled, [aria-disabled='true'])) button[type='reset'] {
    visibility: hidden; /* We hide the clear button when input is empty */
  }
  &:has(button[type='reset']) input {
    padding-inline-end: calc(var(--dsc-multi-select-clear-size) + var(--dsc-multi-select-clear-gap));
  }

  & button[type='reset'] {
    --dsc-button-size: var(--dsc-multi-select-clear-size);

    align-self: center;
    margin-inline-start: calc((var(--dsc-multi-select-clear-size) + var(--dsc-multi-select-clear-gap)) * -1);
    order: 999; /* Place last */
    padding: var(--dsc-multi-select-clear-padding);
    position: relative;
    scale: 0.75;
    z-index: 2;

    &::before {
      content: '';
      height: var(--dsc-multi-select-clear-size);
      width: var(--dsc-multi-select-clear-size);
      mask: var(--dsc-multi-select-clear-icon-url) center / contain no-repeat;
      background: currentcolor;
    }
  }
}

.ds-suggestion {
  --dsc-suggestion-option-background--selected: var(--ds-color-background-tinted);
  --dsc-suggestion-option-border-color: var(--ds-color-base-default);
  --dsc-suggestion-clear-gap: var(--ds-size-2);
  --dsc-suggestion-clear-padding: var(--ds-size-1);
  --dsc-suggestion-clear-size: var(--ds-size-9);
  --dsc-suggestion-clear-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='currentColor' d='M6.53 5.47a.75.75 0 0 0-1.06 1.06L10.94 12l-5.47 5.47a.75.75 0 1 0 1.06 1.06L12 13.06l5.47 5.47a.75.75 0 1 0 1.06-1.06L13.06 12l5.47-5.47a.75.75 0 0 0-1.06-1.06L12 10.94z'/%3E%3C/svg%3E");
  --dsc-suggestion-option-checkmark-url: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%221em%22%20height%3D%221em%22%20fill%3D%22none%22%20viewBox%3D%220%200%2024%2024%22%20focusable%3D%22false%22%20role%3D%22img%22%3E%3Cpath%20fill%3D%22currentColor%22%20fill-rule%3D%22evenodd%22%20d%3D%22M18.998%206.94a.75.75%200%200%201%20.063%201.058l-8%209a.75.75%200%200%201-1.091.032l-5-5a.75.75%200%201%201%201.06-1.06l4.438%204.437%207.471-8.405A.75.75%200%200%201%2019%206.939%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E');
  --dsc-suggestion-option-checkmark-size: var(--ds-size-7);
  --dsc-suggestion-list-gap: var(--ds-size-2);
  --dsc-suggestion-border-width: var(--ds-border-width-default);
  --dsc-suggestion-border-style: solid;
  --dsc-suggestion-border-color: var(--ds-color-neutral-border-default);

  box-sizing: border-box;
  flex-wrap: wrap;
  gap: var(--ds-size-1);
  position: relative;

  &:not([hidden]) {
    display: flex;
  }

  & u-datalist {
    background: var(--ds-color-neutral-background-default);
    border-radius: var(--ds-border-radius-md);
    border-width: var(--dsc-suggestion-border-width);
    border-style: var(--dsc-suggestion-border-style);
    border-color: var(--dsc-suggestion-border-color);
    box-shadow: var(--ds-shadow-md);
    box-sizing: border-box;
    color: var(--ds-color-neutral-text-default);
    inset: 100% 0 auto 0;
    overflow-y: auto;
    position: absolute;
    z-index: 1600;
    margin-top: var(--dsc-suggestion-list-gap);
    max-height: 200px;
    display: flex;
    flex-direction: column;

    /* Ensure datalist is hidden by default */
    &[hidden] {
      display: none !important;
    }

    /* Hide <suggestion.Empty> if any <suggestion.Option> is visible */
    &:has(u-option:not([hidden]):not([aria-disabled='true']):not([data-empty])) > u-option[data-empty] {
      display: none;
    }
    & > u-option[data-empty] {
      cursor: default;
      display: block;
    }

    &:not(:has(u-option:hover)) > u-option:focus-visible {
      border-left-color: var(--dsc-suggestion-option-border-color);
      background: var(--dsc-suggestion-option-background--selected);
      color: var(--ds-color-text-default);
    }

    /* Hide datalist if no children */
    &:empty {
      display: none;
    }

    & > * {
      padding: var(--ds-size-2) var(--ds-size-3);
      font-family: inherit;
    }

    & > :is(u-option) {
      padding-inline-start: var(--dsc-suggestion-option-checkmark-size);
      border: none;
      border-left: 5px solid transparent;
      outline: none;
      border-radius: var(--ds-border-radius-sm);
      cursor: pointer;
      position: relative;

      &[selected] {
        &::before {
          content: '';
          position: absolute;
          left: 0;
          mask: var(--dsc-suggestion-option-checkmark-url) center / contain no-repeat;
          background: currentcolor;
          width: var(--dsc-suggestion-option-checkmark-size);
          height: var(--dsc-suggestion-option-checkmark-size);
        }
      }

      @media (hover: hover) and (pointer: fine) {
        &:not([data-empty]):hover {
          border-left-color: var(--dsc-suggestion-option-border-color);
          background: var(--dsc-suggestion-option-background--selected);
        }
      }
    }
  }

  &:has(input:placeholder-shown) input {
    padding-right: 2.4em;
    background-image: linear-gradient(
        45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      ),
      linear-gradient(
        -45deg,
        var(--_dsc-input-diagonal-1),
        var(--_dsc-input-diagonal-2),
        var(--_dsc-input-diagonal-3),
        var(--_dsc-input-diagonal-4)
      );
    background-position: calc(100% - 1.2em + var(--dsc-input-stroke-width)), calc(100% - 0.8em);
    background-size: 0.4em 0.4em;
    background-repeat: no-repeat;

    @media (forced-colors: active) {
      appearance: auto; /* show chevron */
    }
  }

  /**
   * Clear button
   */
  &:has(input:placeholder-shown) button[type='reset'],
  &:has(input:is(:read-only, :disabled, [aria-disabled='true'])) button[type='reset'] {
    visibility: hidden; /* We hide the clear button when input is empty */
  }
  &:has(button[type='reset']) input {
    padding-inline-end: calc(var(--dsc-suggestion-clear-size) + var(--dsc-suggestion-clear-gap));
  }

  & button[type='reset'] {
    --dsc-button-size: var(--dsc-suggestion-clear-size);

    align-self: center;
    margin-inline-start: calc((var(--dsc-suggestion-clear-size) + var(--dsc-suggestion-clear-gap)) * -1);
    order: 999; /* Place last */
    padding: var(--dsc-suggestion-clear-padding);
    position: relative;
    scale: 0.75;
    z-index: 2;

    &::before {
      content: '';
      height: var(--dsc-suggestion-clear-size);
      width: var(--dsc-suggestion-clear-size);
      mask: var(--dsc-suggestion-clear-icon-url) center / contain no-repeat;
      background: currentcolor;
    }
  }
}

u-tag {
  :host(:not([hidden])) {
    display: inline-block;
  }
  ::slotted(data) {
    cursor: pointer;
    display: inline-block;
    outline: none;
    pointer-events: none;
  }
  ::slotted(data)::after {
    content: '\00D7';
    content: '\00D7'/ '';
    padding-inline: 0.5ch;
    pointer-events: auto;
  }
  ::slotted(data:focus)::after {
    outline: 1px dotted;
    outline: 5px auto Highlight;
    outline: 5px auto -webkit-focus-ring-color;
  }
}

u-datalist {
  :host(:not([hidden])) {
    display: block;
  }
  ::slotted(u-option[disabled]) {
    display: none !important;
  }
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 36px;
  z-index: 1600;
}

u-option {
  :host(:not([hidden])) {
    display: block;
  }
  :host(:focus) {
    outline: 1px dotted;
    outline: 5px auto Highlight;
    outline: 5px auto -webkit-focus-ring-color;
  }
  :host {
    cursor: pointer;
  }
}

.ds-chip {
  --dsc-chip-background: var(--ds-color-surface-tinted);
  --dsc-chip-background--hover: var(--ds-color-surface-hover);
  --dsc-chip-background--active: var(--ds-color-surface-active);
  --dsc-chip-background--checked: var(--ds-color-base-default);
  --dsc-chip-background--checked--hover: var(--ds-color-base-hover);
  --dsc-chip-background--checked--active: var(--ds-color-base-active);
  --dsc-chip-border-width: var(--ds-border-width-default);
  --dsc-chip-border-style: solid;
  --dsc-chip-border-color: var(--ds-color-border-subtle);
  --dsc-chip-border-color--checked: transparent;
  --dsc-chip-color: var(--ds-color-text-default);
  --dsc-chip-input-accent-color: var(--ds-color-base-contrast-default);
  --dsc-chip-input-color: var(--ds-color-text-subtle);
  --dsc-chip-input-stroke-color: var(--ds-color-base-default);
  --dsc-chip-border-radius: var(--ds-border-radius-full);
  --dsc-chip-border-radius--checkbox: var(--ds-border-radius-md);
  --dsc-chip-border-radius--checkbox-input: var(--ds-border-radius-sm);
  --dsc-chip-height: var(--ds-size-8);
  --dsc-chip-icon-size: var(--ds-size-7);
  --dsc-chip-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='none' viewBox='0 0 24 24' focusable='false' role='img'%3E%3Cpath fill='currentColor' d='M6.53 5.47a.75.75 0 0 0-1.06 1.06L10.94 12l-5.47 5.47a.75.75 0 1 0 1.06 1.06L12 13.06l5.47 5.47a.75.75 0 1 0 1.06-1.06L13.06 12l5.47-5.47a.75.75 0 0 0-1.06-1.06L12 10.94z'%3E%3C/path%3E%3C/svg%3E");
  --dsc-chip-input-size: var(--ds-size-5);
  --dsc-chip-spacing: calc(
    (var(--dsc-chip-height) - var(--dsc-chip-input-size)) / 2
  ); /* Distance between edge of input and chip */

  align-items: center;
  background: var(--dsc-chip-background);
  border-radius: var(--dsc-chip-border-radius);
  border-width: var(--dsc-chip-border-width);
  border-style: var(--dsc-chip-border-style);
  border-color: var(--dsc-chip-border-color);
  box-sizing: border-box;
  color: var(--dsc-chip-color);
  cursor: pointer;
  font-family: inherit;
  gap: var(--dsc-chip-spacing);
  line-height: var(--ds-line-height-sm);
  margin: 0;
  min-height: var(--dsc-chip-height);
  max-height: fit-content;
  max-width: fit-content;
  padding: 0 var(--ds-size-3);
  text-decoration: none;

  @composes ds-focus from './base.css';

  &:not([hidden]) {
    display: inline-flex;
  }

  &:not([data-size]) {
    font-size: var(--ds-font-size-minus-1);
  }

  /* Show focus ring when input inside is focused by keyboard interaction */
  &:has(:focus-visible) {
    @composes ds-focus--visible from './base.css';
  }

  &:disabled,
  &:has(input:disabled),
  &[aria-disabled='true'] {
    cursor: not-allowed;
    opacity: var(--ds-opacity-disabled);
  }

  &[data-removable] {
    padding-inline-end: var(--dsc-chip-spacing);

    &::after {
      content: '';
      background: currentcolor;
      height: var(--dsc-chip-icon-size);
      mask: center / contain no-repeat var(--dsc-chip-icon-url);
      width: var(--dsc-chip-icon-size);
    }
  }

  &:has(input[type='radio']) {
    padding-inline-start: var(--dsc-chip-spacing);
  }

  &:has(input[type='checkbox']) {
    border-radius: var(--dsc-chip-border-radius--checkbox);
    padding-inline: var(--dsc-chip-spacing);

    & input {
      border-radius: var(--dsc-chip-border-radius--checkbox-input);
    }
  }

  & > input {
    --dsc-input-background: transparent;
    --dsc-input-border-color: var(--dsc-chip-input-color);
    --dsc-input-accent-color: var(--dsc-chip-input-accent-color);
    --dsc-input-stroke-color: var(--dsc-chip-input-stroke-color);
    --dsc-input-size--toggle: var(--dsc-chip-input-size);
  }

  &:has(input:checked),
  &[data-removable] {
    color: var(--dsc-chip-input-accent-color);
    background: var(--dsc-chip-background--checked);
    border-color: var(--dsc-chip-border-color--checked);
  }

  /* Only use hover for non-touch devices to prevent sticky-hovering */
  @media (hover: hover) and (pointer: fine) {
    &:not(:has(:disabled, [aria-disabled='true'])) {
      &:hover {
        background: var(--dsc-chip-background--hover);
      }

      &:active {
        background: var(--dsc-chip-background--active);
      }

      &:has(input:checked),
      &[data-removable] {
        &:hover {
          background: var(--dsc-chip-background--checked--hover);
        }

        &:active {
          background: var(--dsc-chip-background--checked--active);
        }
      }
    }
  }
}

.ds-heading {
  font-size: 1.3em; /* Fallback if not supporting round() */
  font-size: round(down, 1.3em, 0.0625rem); /* Default to 130% */
  font-weight: var(--ds-heading-md-font-weight);
  letter-spacing: var(--ds-heading-md-letter-spacing);
  line-height: var(--ds-heading-md-line-height);
  margin: 0;

  /* Using font-size to ensure consistent size when explicitly setting data-size */
  &[data-size='2xs'] {
    font-weight: var(--ds-heading-2xs-font-weight);
    line-height: var(--ds-heading-2xs-line-height);
    font-size: var(--ds-heading-2xs-font-size);
    letter-spacing: var(--ds-heading-2xs-letter-spacing);
  }

  &[data-size='xs'] {
    font-weight: var(--ds-heading-xs-font-weight);
    line-height: var(--ds-heading-xs-line-height);
    font-size: var(--ds-heading-xs-font-size);
    letter-spacing: var(--ds-heading-xs-letter-spacing);
  }

  &[data-size='sm'] {
    font-weight: var(--ds-heading-sm-font-weight);
    line-height: var(--ds-heading-sm-line-height);
    font-size: var(--ds-heading-sm-font-size);
    letter-spacing: var(--ds-heading-sm-letter-spacing);
  }

  &[data-size='md'] {
    font-size: var(--ds-heading-md-font-size);
  }

  &[data-size='lg'] {
    font-weight: var(--ds-heading-lg-font-weight);
    line-height: var(--ds-heading-lg-line-height);
    font-size: var(--ds-heading-lg-font-size);
    letter-spacing: var(--ds-heading-lg-letter-spacing);
  }

  &[data-size='xl'] {
    font-weight: var(--ds-heading-xl-font-weight);
    line-height: var(--ds-heading-xl-line-height);
    font-size: var(--ds-heading-xl-font-size);
    letter-spacing: var(--ds-heading-xl-letter-spacing);
  }

  &[data-size='2xl'] {
    font-weight: var(--ds-heading-2xl-font-weight);
    line-height: var(--ds-heading-2xl-line-height);
    font-size: var(--ds-heading-2xl-font-size);
    letter-spacing: var(--ds-heading-2xl-letter-spacing);
  }
}

.ds-link {
  --dsc-link-background--active: var(--ds-color-surface-tinted);
  --dsc-link-color--active: var(--ds-color-text-default);
  --dsc-link-color--hover: var(--ds-color-text-default);
  --dsc-link-color: var(--ds-color-text-subtle);
  --dsc-link-background--focus: var(--ds-color-focus-outer);
  --dsc-link-color--focus: var(--ds-color-focus-inner);
  --dsc-link-color--visited: var(--ds-link-color-visited);
  --dsc-link-text-decoration-thickness--hover: 0.125em; /* 2px ish */
  --dsc-link-text-decoration-thickness: 0.0625em; /* 1px ish */

  color: var(--dsc-link-color);
  outline: none;
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: var(--dsc-link-text-decoration-thickness);
  text-underline-offset: 0.27em; /* 5px ish */
  display: flex;
  align-items: center;
  gap: 6px;

  & :is(img, svg) {
    vertical-align: middle; /* Align img or svg icon with text */
  }

  /* What do we do here? */
  &[data-color='neutral'] {
    --dsc-link-color--active: var(--ds-color-neutral-text-subtle);
    --dsc-link-color--hover: var(--ds-color-neutral-text-subtle);
    --dsc-link-color: var(--ds-color-neutral-text-default);
  }

  /**
   * States
   */
  &:visited {
    color: var(--dsc-link-color--visited);
  }

  /* Only use hover for non-touch devices to prevent sticky-hovering */
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      color: var(--dsc-link-color--hover);
      text-decoration-thickness: var(--dsc-link-text-decoration-thickness--hover);
    }
  }

  &:focus-visible {
    background: var(--dsc-link-background--focus);
    color: var(--dsc-link-color--focus);
    outline: 2px solid transparent;
  }

  &:active {
    background: var(--dsc-link-background--active);
    color: var(--dsc-link-color--active);
  }
}
