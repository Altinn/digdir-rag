{:db-env :remote
 :db {:mem {:store {:backend :mem :id "schemaless"}
            :schema-flexibility :read}
      :local {:store {:backend :file
                      :path "./datahike-db"
                      :id "schemaless"}
              :schema-flexibility :read}
      :remote {:store {:backend :jdbc
                       :dbtype "postgresql"
                       :host "aws-0-eu-central-1.pooler.supabase.com"
                       :port 6543
                       :dbname "postgres"
                       :table #env ADH_POSTGRES_TABLE
                       :user #env ADH_POSTGRES_USER
                       :password #env ADH_POSTGRES_PWD
                       :jdbcUrl "jdbc:postgresql://aws-0-eu-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true&sslmode=require&prepareThreshold=0"}
               :schema-flexibility :read}

      :distributed {}}
 :chat {:all-entities-image "bot.svg"
        :entities [{:id "03174558-327a-47a4-93e1-5812955243b6"
                    :name "Kunnskapsassistent"
                    :image "kudos-logo.png"
                    :docs-collection "PROD_kudos_docs"
                    :chunks-collection "PROD_kudos_chunks"
                    :phrases-collection "PROD_kudos_phrases"
                    :phrase-gen-prompt "keyword-search"
                    :promptRagQueryRelax "You have access to a search API that returns relevant documentation.\nYour task is to generate an array of up to 7 search queries that are relevant to this question. Use a variation of related keywords and synonyms for the queries, trying to be as general as possible.\nInclude as many queries as you can think of, including and excluding terms. For example, include queries like ['keyword_1 keyword_2', 'keyword_1', 'keyword_2']. Be creative. The more queries you include, the more likely you are to find relevant results.\n"
                    :promptRagGenerate "Use the following pieces of information to answer the user's question.\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nContext: {context}\n\nQuestion: {question}\n\nOnly return the helpful answer below, using Markdown for improved readability.\n\nAlways provide your helpful answer in Norwegian, unless the question is in another language. If the question is in another language, provide the answer in that language.\n\nHelpful answer:\n"
                    :reasoning-languages ["en" "no"]
                    :prompt ""}]}}
